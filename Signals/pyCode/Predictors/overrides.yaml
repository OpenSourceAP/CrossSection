# Predictor Validation Overrides
# 
# This file allows manual approval of validation failures at the predictor level.
# If a predictor is listed here with status: accepted, all its validation 
# failures will be treated as acceptable.
#
# Structure:
#   predictor_name:
#     status: accepted|rejected          # Required: approval decision
#     reviewed_on: YYYY-MM-DD          # Required: date of review  
#     reviewed_by: [reviewer_id]       # Required: who reviewed this
#     details: |                       # Required: justification
#       Multi-line explanation of the decision

PredictedFE:
  status: accepted
  reviewed_on: 2025-08-13
  reviewed_by: ac
  details: |
    The standardized deviation is on average 1% with a sd of 7 pp. So it's above the threshold, but it's small. Sumstats and regressions show that the replication works very well. Regressing python on stata shows that the coefficient is 0.9959 and the Rsq is 0.995. This is a complicated file, so it makes sense that there will be some deviations later in the code, which is where PredictedFE is created.

PriceDelayTstat:
  status: accepted
  reviewed_on: 2025-08-14
  reviewed_by: ac
  details: |
    There was a bug with the Stata code's winsorization. No way to replicate this. There's also a typo in the Stata formula for this. See https://github.com/OpenSourceAP/CrossSection/issues/177

Recomm_ShortInterest:
  status: accepted
  reviewed_on: 2025-08-20
  reviewed_by: ac
  details: |
    The do file was using asrol with stat(first) to fill in missing values. This method is not used anywhere else. Also, this method does not work properly. I really don't understand what it's doing See https://github.com/OpenSourceAP/CrossSection/issues/178. 

    I wrote Recomm_ShortInterest.py from scratch to fill in the missing values properly. It results in far more observations than the do file. I checked a few of the Stata observations that are missing in Python and they all should be missing. They had ConsRecomm scores of around 3.0, which should not be an extreme quintile and therefore should be dropped.

CredRatDG:
  status: accepted
  reviewed_on: 2025-08-20
  reviewed_by: ac
  details: |
    The sample deviations are all downgrades found in Python but not in Stata. I manually checked a few and found these all have CIQ downgrades. This is likely an improvement due to patching the CIQ deduplication bugs in the Stata DataDownloads code.