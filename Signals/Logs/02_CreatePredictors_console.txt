Create Predictors Log - Started at 2025-09-15 14:17:45
================================================================================


üîÑ Creating Signal Master Table: SignalMasterTable.py
============================================================
Starting SignalMasterTable.py...
Loading monthly CRSP data...
Loaded monthlyCRSP: 5153763 rows, 9 columns
Filtering for common stocks and major exchanges...
After filtering: 4047630 rows
Merging with m_aCompustat...
After Compustat merge: 4047630 rows
Adding auxiliary variables...
After adding auxiliary vars: 4047630 rows, 12 columns
Checking for IBES-CRSP linking table...
Adding IBES-CRSP link...
After IBES link merge: 4047630 rows, 13 columns
Checking for OptionMetrics-CRSP linking table...
Adding OptionMetrics-CRSP link...
After OptionMetrics link merge: 4047630 rows, 14 columns
Saving SignalMasterTable...
SignalMasterTable saved to: ../pyData/Intermediate/SignalMasterTable.parquet
Final shape: 4047630 rows, 14 columns
Head:    permno time_avail_m ticker  exchcd  ...  sicCS  NYSE  tickerIBES  secid
0   10000   1986-01-01  OMFGA       3  ...            0                NaN
1   10000   1986-02-01  OMFGA       3  ...            0                NaN
2   10000   1986-03-01  OMFGA       3  ...            0                NaN
3   10000   1986-04-01  OMFGA       3  ...            0                NaN
4   10000   1986-05-01  OMFGA       3  ...            0                NaN

[5 rows x 14 columns]
============================================================
‚úÖ Completed: SignalMasterTable.py
Execution time: 4.61 seconds


üîÑ Starting: Accruals.py
============================================================
Starting Accruals.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 10 columns
Deduplicating by permno time_avail_m...
After deduplication: 3626619 rows
Setting up panel data structure...
Creating lag variables...
Calculating Accruals...
Calculated Accruals for 3277042 observations
saving Accruals
Saved 3277042 rows to ../pyData/Predictors/Accruals.csv
Accruals.py completed successfully
============================================================
‚úÖ Completed: Accruals.py
Execution time: 1.85 seconds


üîÑ Starting: AccrualsBM.py
============================================================
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
Starting AccrualsBM.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 10 columns
Deduplicating by permno time_avail_m...
After deduplication: 3626619 rows
Merging with SignalMasterTable...
After merging with SignalMasterTable: 4047630 rows
Setting up panel data structure...
Calculating BM...
Creating lag variables for accruals...
Calculating tempacc...
Creating BM quintiles...
Creating accruals quintiles...
Generating AccrualsBM signal...
Calculated AccrualsBM for 220635 observations
saving AccrualsBM
Saved 220635 rows to ../pyData/Predictors/AccrualsBM.csv
AccrualsBM.py completed successfully
============================================================
‚úÖ Completed: AccrualsBM.py
Execution time: 4.58 seconds


üîÑ Starting: AdExp.py
============================================================
Starting AdExp.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 3 columns
Merging with SignalMasterTable...
After merging with SignalMasterTable: 4047630 rows
Calculating AdExp...
Calculated AdExp for 1049006 observations
saving AdExp
Saved 1049006 rows to ../pyData/Predictors/AdExp.csv
AdExp.py completed successfully
============================================================
‚úÖ Completed: AdExp.py
Execution time: 1.85 seconds


üîÑ Starting: AgeIPO.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/AgeIPO.py:85: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value 'nan' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.
  df.loc[df['IPOdate'].isna(), 'tempipo'] = np.nan
Starting AgeIPO.py...
Loading SignalMasterTable data...
Loaded SignalMasterTable: 4047630 rows, 2 columns
Merging with IPODates...
After merging with IPODates: 4047630 rows
Calculating recent IPO filter...
Calculating AgeIPO...
Applying minimum IPO firms per month filter...
Calculated AgeIPO for 353486 observations
saving AgeIPO
Saved 353486 rows to ../pyData/Predictors/AgeIPO.csv
AgeIPO.py completed successfully
============================================================
‚úÖ Completed: AgeIPO.py
Execution time: 1.02 seconds


üîÑ Starting: AM.py
============================================================
AM predictor saved successfully
============================================================
‚úÖ Completed: AM.py
Execution time: 4.49 seconds


üîÑ Starting: AnalystRevision.py
============================================================
Starting AnalystRevision.py...
Loading and preparing IBES data...
Prepared IBES data: 2382154 rows, 3 columns
Loading SignalMasterTable...
Loaded SignalMasterTable: 4047630 rows, 3 columns
Merging with IBES data...
After merging with IBES data: 4047630 rows
Setting up panel data (sorting by permno, time_avail_m)...
Calculating 1-month lag and AnalystRevision...
Calculated AnalystRevision for 1923490 observations
saving AnalystRevision
Saved 1923490 rows to ../pyData/Predictors/AnalystRevision.csv
AnalystRevision.py completed successfully
============================================================
‚úÖ Completed: AnalystRevision.py
Execution time: 1.76 seconds


üîÑ Starting: AssetGrowth.py
============================================================
Starting AssetGrowth.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 4 columns
Setting up panel data (sorting by permno, time_avail_m)...
Calculating 12-month lag and AssetGrowth...
Calculated AssetGrowth for 3312591 observations
saving AssetGrowth
Saved 3312591 rows to ../pyData/Predictors/AssetGrowth.csv
AssetGrowth.py completed successfully
============================================================
‚úÖ Completed: AssetGrowth.py
Execution time: 1.29 seconds


üîÑ Starting: Beta.py
============================================================
================================================================================
üèóÔ∏è  Beta.py
Generating CAPM Beta predictor using direct polars-ols rolling regression
================================================================================
üìä Loading monthly CRSP, FF, and Market data...
Loading monthlyCRSP.parquet...
Loaded CRSP: 5,153,763 monthly observations
Loading monthlyFF.parquet...
Loaded FF: 1,188 monthly observations
Loading monthlyMarket.parquet...
Loaded Market: 1,189 monthly observations
üîó Merging datasets...
After merging: 5,150,010 observations
üßÆ Computing CAPM Beta using direct polars-ols rolling 60-observation regressions...
Computing rolling regressions by permno using 60-observation windows...
Rolling window regression with minimum 20 observations per window
Processing 38,835 unique permnos...
Generated Beta values: 4,353,773 observations
Beta summary stats:
  Mean: 0.9936
  Std: 0.7517
  Min: -29.7167
  Max: 52.6339
üíæ Saving Beta predictor...
saving Beta
Saved 4353773 rows to ../pyData/Predictors/Beta.csv
‚úÖ Beta.csv saved successfully
================================================================================
‚úÖ Beta.py Complete
CAPM Beta predictor generated using rolling 60-observation regression windows
================================================================================
============================================================
‚úÖ Completed: Beta.py
Execution time: 6.22 seconds


üîÑ Starting: BetaLiquidityPS.py
============================================================
================================================================================
üèóÔ∏è  BetaLiquidityPS.py
Generating Pastor-Stambaugh liquidity beta predictor
================================================================================
üìä Loading monthly CRSP, FF, and Liquidity data...
Loading monthlyCRSP.parquet...
Loaded CRSP: 5,153,763 monthly observations
Loading monthlyFF.parquet...
Loaded FF: 1,188 monthly observations
Loading monthlyLiquidity.parquet...
Loaded Liquidity: 749 monthly observations
üîó Merging datasets...
After merging: 5,150,010 observations
üßÆ Computing Pastor-Stambaugh liquidity beta using direct polars-ols rolling 60-observation 4-factor regressions...
Computing rolling 4-factor regressions for 38,835 unique permnos...
Using 60-observation rolling windows with 36-observation minimum for each stock
Generated BetaLiquidityPS values: 3,479,410 observations
BetaLiquidityPS summary stats:
  Mean: -0.0021
  Std: 0.4792
  Min: -23.6664
  Max: 41.6906
üíæ Saving BetaLiquidityPS predictor...
saving BetaLiquidityPS
Saved 3479410 rows to ../pyData/Predictors/BetaLiquidityPS.csv
‚úÖ BetaLiquidityPS.csv saved successfully
================================================================================
‚úÖ BetaLiquidityPS.py Complete
Pastor-Stambaugh liquidity beta predictor generated using rolling 4-factor regressions
================================================================================
============================================================
‚úÖ Completed: BetaLiquidityPS.py
Execution time: 10.24 seconds


üîÑ Starting: BetaTailRisk.py
============================================================
================================================================================
üèóÔ∏è  BetaTailRisk.py
Generating Tail Risk Beta predictor
================================================================================
üìä Part 1: Creating monthly tail risk factor from daily returns...
Loading dailyCRSP.parquet...
Loaded daily CRSP: 107,662,961 daily observations
Calculating 5th percentile returns by month...
Generated monthly 5th percentiles for 1,188 months
Filtering to tail observations (bottom 5%) and calculating tail excess returns...
Filtered to 5,325,782 tail observations
Generated monthly tail risk factor for 1,188 months
Saved TailRisk.parquet
üìä Part 2: Computing tail risk betas from monthly returns...
Loading monthlyCRSP.parquet...
Loaded monthly CRSP: 5,153,763 monthly observations
Merging with tail risk factor...
After merging: 5,153,763 observations
Computing rolling 120-month tail risk betas for 38,843 unique permnos...
Rolling 120-month regression windows with minimum 72 observations per permno
Generated BetaTailRisk values: 2,332,084 observations
BetaTailRisk summary stats:
  Mean: 0.6372
  Std: 0.7609
  Min: -96.2499
  Max: 18.9120
üíæ Saving BetaTailRisk predictor...
saving BetaTailRisk
Saved 2332084 rows to ../pyData/Predictors/BetaTailRisk.csv
‚úÖ BetaTailRisk.csv saved successfully
================================================================================
‚úÖ BetaTailRisk.py Complete
Tail risk beta predictor generated using polars rolling window regression
================================================================================
============================================================
‚úÖ Completed: BetaTailRisk.py
Execution time: 7.59 seconds


üîÑ Starting: BidAskSpread.py
============================================================
Starting BidAskSpread.py...
Loading corwin_schultz_spread data...
Loaded 4481622 records from ../pyData/Prep/corwin_schultz_spread.csv
After dropping missing PERMNO: 4481622 records
Processed data: 4481622 rows, 3 columns
BidAskSpread available for 4481622 observations
saving BidAskSpread
Saved 4481622 rows to ../pyData/Predictors/BidAskSpread.csv
BidAskSpread.py completed successfully
============================================================
‚úÖ Completed: BidAskSpread.py
Execution time: 3.14 seconds


üîÑ Starting: BM.py
============================================================
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
Starting BM.py...
Loading m_aCompustat data...
Loading SignalMasterTable...
Loaded m_aCompustat: 3626619 rows
Loaded SignalMasterTable: 4047630 rows
Merging with SignalMasterTable...
After merge: 4047630 rows
Setting up panel data structure...
Creating 6-month lag for market equity...
Calculating BM signal...
Calculated BM for 2715230 observations
BM.py completed successfully
============================================================
‚úÖ Completed: BM.py
Execution time: 4.45 seconds


üîÑ Starting: BMdec.py
============================================================
Starting BMdec predictor...
Loading m_aCompustat data...
Loaded 3,626,619 Compustat observations
After deduplication: 3,626,619 observations
Loading monthlyCRSP data...
Loaded 5,153,763 CRSP observations
Merging Compustat and CRSP data...
After merge: 3,362,027 observations
Constructing BMdec signal...
Generated BMdec values for 2,998,704 observations
Saving predictor...
saving BMdec
Saved 2998704 rows to ../pyData/Predictors/BMdec.csv
BMdec predictor completed successfully!
============================================================
‚úÖ Completed: BMdec.py
Execution time: 2.70 seconds


üîÑ Starting: BookLeverage.py
============================================================
Starting BookLeverage.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 10 columns
Deduplicating by permno time_avail_m...
After deduplication: 3626619 rows
Calculating tempPS with fallback logic...
Calculating tempSE with fallback logic...
Calculating BookLeverage...
Calculated BookLeverage for 3608415 observations
saving BookLeverage
Saved 3608415 rows to ../pyData/Predictors/BookLeverage.csv
BookLeverage.py completed successfully
============================================================
‚úÖ Completed: BookLeverage.py
Execution time: 1.53 seconds


üîÑ Starting: BrandInvest.py
============================================================
Starting BrandInvest predictor...
Loading a_aCompustat data...
Loaded 302,420 annual Compustat observations
Constructing BrandInvest signal...
Calculating brand capital accumulation...
Applying depreciation and accumulation...
Applying industry filters...
Filtered out 65,242 observations (utilities/financials)
Kept only December observations: 145,831
Expanding annual data to monthly...
After monthly expansion: 1,749,972 observations
After deduplication: 1,749,972 observations
Generated BrandInvest values for 509,604 observations
Saving predictor...
saving BrandInvest
Saved 509604 rows to ../pyData/Predictors/BrandInvest.csv
BrandInvest predictor completed successfully!
============================================================
‚úÖ Completed: BrandInvest.py
Execution time: 32.13 seconds


üîÑ Starting: Cash.py
============================================================
Starting Cash predictor...
Loading m_QCompustat data...
Loaded 5,463,105 quarterly Compustat observations
Processing quarterly data...
After deduplication: 1,152,368 observations
Expanding quarterly data to monthly...
After monthly expansion: 3,457,104 observations
After removing overlapping announcements: 3,213,349 observations
Loading SignalMasterTable...
Loaded SignalMasterTable: 3,041,670 observations
Merging with SignalMasterTable...
After merge: 2,246,793 observations
Constructing Cash signal...
Generated Cash values for 2,246,778 observations
Saving predictor...
saving Cash
Saved 2246778 rows to ../pyData/Predictors/Cash.csv
Cash predictor completed successfully!
============================================================
‚úÖ Completed: Cash.py
Execution time: 3.11 seconds


üîÑ Starting: CashProd.py
============================================================
Starting CashProd.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 4 columns
Deduplicating by permno time_avail_m...
After deduplication: 3626619 rows
Merging with SignalMasterTable...
After merging with SignalMasterTable: 3041670 rows
Calculating CashProd...
Calculated CashProd for 3038217 observations
saving CashProd
Saved 3038217 rows to ../pyData/Predictors/CashProd.csv
CashProd.py completed successfully
============================================================
‚úÖ Completed: CashProd.py
Execution time: 2.09 seconds


üîÑ Starting: CBOperProf.py
============================================================
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
Starting CBOperProf predictor...
Loading SignalMasterTable...
Loaded SignalMasterTable: 4,047,630 observations
Loading m_aCompustat...
Loaded m_aCompustat: 3,626,619 observations
Merging SignalMasterTable with m_aCompustat...
After merge: 4,047,630 observations
Constructing CBOperProf signal...
Generated CBOperProf values for 2,283,899 observations
Excluded 1,731,809 observations due to filtering criteria
Saving predictor...
saving CBOperProf
Saved 2283899 rows to ../pyData/Predictors/CBOperProf.csv
CBOperProf predictor completed successfully!
============================================================
‚úÖ Completed: CBOperProf.py
Execution time: 6.16 seconds


üîÑ Starting: CF.py
============================================================
Starting CF.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 5 columns
Deduplicating by permno time_avail_m...
After deduplication: 3626619 rows
Merging with SignalMasterTable...
After merging with SignalMasterTable: 4047630 rows
Calculating CF...
Calculated CF for 3053142 observations
saving CF
Saved 3053142 rows to ../pyData/Predictors/CF.csv
CF.py completed successfully
============================================================
‚úÖ Completed: CF.py
Execution time: 2.19 seconds


üîÑ Starting: cfp.py
============================================================
Starting cfp predictor...
Loading m_aCompustat data...
Loaded 3,626,619 Compustat observations
After deduplication: 3,626,619 observations
Loading SignalMasterTable...
Loaded SignalMasterTable: 4,047,630 observations
Merging with SignalMasterTable...
After merge: 3,041,670 observations
Constructing cfp signal...
Generated cfp values for 2,614,939 observations
Used oancf for 1,925,471 observations
Saving predictor...
saving cfp
Saved 2614939 rows to ../pyData/Predictors/cfp.csv
cfp predictor completed successfully!
============================================================
‚úÖ Completed: cfp.py
Execution time: 4.12 seconds


üîÑ Starting: ChangeInRecommendation.py
============================================================
ChangeInRecommendation predictor created with 450458 observations
============================================================
‚úÖ Completed: ChangeInRecommendation.py
Execution time: 20.18 seconds


üîÑ Starting: ChAssetTurnover.py
============================================================
ChAssetTurnover predictor saved: 2518546 observations
============================================================
‚úÖ Completed: ChAssetTurnover.py
Execution time: 4.03 seconds


üîÑ Starting: ChEQ.py
============================================================
Starting ChEQ predictor...
Loading m_aCompustat data...
Loaded 3,626,619 Compustat observations
After deduplication: 3,626,619 observations
Constructing ChEQ signal...
Generated ChEQ values for 3,060,849 observations
Saving predictor...
saving ChEQ
Saved 3060849 rows to ../pyData/Predictors/ChEQ.csv
ChEQ predictor completed successfully!
============================================================
‚úÖ Completed: ChEQ.py
Execution time: 0.77 seconds


üîÑ Starting: ChForecastAccrual.py
============================================================
ChForecastAccrual predictor saved: 628491 observations
============================================================
‚úÖ Completed: ChForecastAccrual.py
Execution time: 6.97 seconds


üîÑ Starting: ChInv.py
============================================================
ChInv predictor saved: 3312651 observations
============================================================
‚úÖ Completed: ChInv.py
Execution time: 3.12 seconds


üîÑ Starting: ChInvIA.py
============================================================
ChInvIA predictor saved: 2678522 observations
============================================================
‚úÖ Completed: ChInvIA.py
Execution time: 5.25 seconds


üîÑ Starting: ChNAnalyst.py
============================================================
saving ChNAnalyst
Saved 371936 rows to ../pyData/Predictors/ChNAnalyst.csv
============================================================
‚úÖ Completed: ChNAnalyst.py
Execution time: 3.30 seconds


üîÑ Starting: ChNNCOA.py
============================================================
ChNNCOA predictor saved: 3263446 observations
============================================================
‚úÖ Completed: ChNNCOA.py
Execution time: 3.39 seconds


üîÑ Starting: ChNWC.py
============================================================
Starting ChNWC predictor...
Loading m_aCompustat data...
Loaded 3,626,619 Compustat observations
After deduplication: 3,626,619 observations
Constructing ChNWC signal...
Generated ChNWC values for 3,276,826 observations
Saving predictor...
saving ChNWC
Saved 3276826 rows to ../pyData/Predictors/ChNWC.csv
ChNWC predictor completed successfully!
============================================================
‚úÖ Completed: ChNWC.py
Execution time: 0.87 seconds


üîÑ Starting: ChTax.py
============================================================
Starting ChTax predictor...
Loading m_aCompustat data...
Loaded 3,626,619 Compustat observations
Loading m_QCompustat data...
Loaded 5,463,105 quarterly Compustat observations
Merging Compustat and quarterly data...
After merge: 3,265,490 observations
Constructing ChTax signal...
Generated ChTax values for 2,841,464 observations
Saving predictor...
saving ChTax
Saved 2841464 rows to ../pyData/Predictors/ChTax.csv
ChTax predictor completed successfully!
============================================================
‚úÖ Completed: ChTax.py
Execution time: 2.20 seconds


üîÑ Starting: CitationsRD.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/CitationsRD.py:97: FutureWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.
  df = df.groupby('gvkey').apply(lambda x: x.iloc[2:]).reset_index(drop=True)
Loading SignalMasterTable...
After early date filter: (3481556, 6)
Loading and merging Compustat...
After Compustat merge: (3481556, 11)
After dropping missing gvkey: (2875790, 11)
Loading and merging patent data...
After patent merge: (2875790, 12)
Creating calendar-based lags...
After creating lags: (2936331, 13)
Filtering to June observations...
After June filter: (237998, 13)
Creating calendar-based rolling sums...
  Computing 48-month calendar rolling XRD sums...
  Computing 48-month calendar rolling citation sums...
Creating size categories...
Creating CitationsRD tercile categories...
Expanding to monthly observations...
saving CitationsRD
Saved 660600 rows to ../pyData/Predictors/CitationsRD.csv
============================================================
‚úÖ Completed: CitationsRD.py
Execution time: 5.78 seconds


üîÑ Starting: CompEquIss.py
============================================================
Starting CompEquIss predictor...
Loading SignalMasterTable...
Loaded 4,047,630 SignalMasterTable observations
Constructing CompEquIss signal...
Creating 60-month lags with calendar validation...
Generated CompEquIss values for 2,560,488 observations
Saving predictor...
saving CompEquIss
Saved 2560488 rows to ../pyData/Predictors/CompEquIss.csv
CompEquIss predictor completed successfully!
============================================================
‚úÖ Completed: CompEquIss.py
Execution time: 2.97 seconds


üîÑ Starting: CompositeDebtIssuance.py
============================================================
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
Starting CompositeDebtIssuance predictor...
Loading m_aCompustat data...
Loaded 3,626,619 Compustat observations
Constructing CompositeDebtIssuance signal...
After deduplication: 3,626,619 observations
Calculating 60-month calendar-based lag...
Generated CompositeDebtIssuance values for 2,158,413 observations
Saving predictor...
saving CompositeDebtIssuance
Saved 2158413 rows to ../pyData/Predictors/CompositeDebtIssuance.csv
CompositeDebtIssuance predictor completed successfully!
============================================================
‚úÖ Completed: CompositeDebtIssuance.py
Execution time: 1.32 seconds


üîÑ Starting: ConsRecomm.py
============================================================
Starting ConsRecomm predictor...
Loading IBES Recommendations data...
Loaded 864,089 IBES recommendations observations
After first collapse: 838,063 observations
After second collapse: 550,582 observations
Generated ConsRecomm values for 160,544 observations
Loading SignalMasterTable...
Loaded 4,047,630 SignalMasterTable observations
Merging data...
After merging: 464,223 observations
Saving predictor...
saving ConsRecomm
Saved 134129 rows to ../pyData/Predictors/ConsRecomm.csv
ConsRecomm predictor completed successfully!
============================================================
‚úÖ Completed: ConsRecomm.py
Execution time: 0.94 seconds


üîÑ Starting: ConvDebt.py
============================================================
Starting ConvDebt predictor...
Loading m_aCompustat data...
Loaded 3,626,619 Compustat observations
Constructing ConvDebt signal...
After deduplication: 3,626,619 observations
Generated ConvDebt values for 3,626,619 observations
ConvDebt = 1 for 481,702 observations
Saving predictor...
saving ConvDebt
Saved 3626619 rows to ../pyData/Predictors/ConvDebt.csv
ConvDebt predictor completed successfully!
============================================================
‚úÖ Completed: ConvDebt.py
Execution time: 0.75 seconds


üîÑ Starting: CoskewACX.py
============================================================
Loading daily CRSP data...
Loaded dailyCRSP: (107662961, 7) rows
After 1962-07-02 filter: (98768585, 7) rows
Loading daily Fama-French data...
Loaded dailyFF: (26023, 6) rows
Merging CRSP and FF data...
After merging with FF: (98768585, 9) rows
Converting to continuous-time compounded returns...
Data ready for processing: (98768585, 9) rows
Starting 12-month batch processing loop...
Processing batch 1/12...
  Batch 1: 93486210 observations after time assignment
  Batch 1: 344824 final observations
Processing batch 2/12...
  Batch 2: 93663925 observations after time assignment
  Batch 2: 344947 final observations
Processing batch 3/12...
  Batch 3: 93934869 observations after time assignment
  Batch 3: 345413 final observations
Processing batch 4/12...
  Batch 4: 94115199 observations after time assignment
  Batch 4: 345627 final observations
Processing batch 5/12...
  Batch 5: 94361510 observations after time assignment
  Batch 5: 346194 final observations
Processing batch 6/12...
  Batch 6: 94571108 observations after time assignment
  Batch 6: 347141 final observations
Processing batch 7/12...
  Batch 7: 94742725 observations after time assignment
  Batch 7: 349622 final observations
Processing batch 8/12...
  Batch 8: 94992396 observations after time assignment
  Batch 8: 349461 final observations
Processing batch 9/12...
  Batch 9: 95149874 observations after time assignment
  Batch 9: 350302 final observations
Processing batch 10/12...
  Batch 10: 95407990 observations after time assignment
  Batch 10: 350850 final observations
Processing batch 11/12...
  Batch 11: 95566186 observations after time assignment
  Batch 11: 351241 final observations
Processing batch 12/12...
  Batch 12: 95769074 observations after time assignment
  Batch 12: 353523 final observations
Combining all batches...
Final combined dataset: (4179145, 3) rows
Final summary statistics:
shape: (9, 4)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ statistic  ‚îÜ permno       ‚îÜ yyyymm        ‚îÜ CoskewACX  ‚îÇ
‚îÇ ---        ‚îÜ ---          ‚îÜ ---           ‚îÜ ---        ‚îÇ
‚îÇ str        ‚îÜ f64          ‚îÜ f64           ‚îÜ f64        ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ count      ‚îÜ 4.179145e6   ‚îÜ 4.179145e6    ‚îÜ 4.179145e6 ‚îÇ
‚îÇ null_count ‚îÜ 0.0          ‚îÜ 0.0           ‚îÜ 0.0        ‚îÇ
‚îÇ mean       ‚îÜ 55200.306551 ‚îÜ 199858.951931 ‚îÜ -0.139801  ‚îÇ
‚îÇ std        ‚îÜ 28840.682547 ‚îÜ 1620.653336   ‚îÜ 0.33586    ‚îÇ
‚îÇ min        ‚îÜ 10000.0      ‚îÜ 196207.0      ‚îÜ -6.276088  ‚îÇ
‚îÇ 25%        ‚îÜ 24803.0      ‚îÜ 198611.0      ‚îÜ -0.220814  ‚îÇ
‚îÇ 50%        ‚îÜ 60186.0      ‚îÜ 199907.0      ‚îÜ -0.085898  ‚îÇ
‚îÇ 75%        ‚îÜ 81674.0      ‚îÜ 201211.0      ‚îÜ 0.020688   ‚îÇ
‚îÇ max        ‚îÜ 93436.0      ‚îÜ 202412.0      ‚îÜ 3.566706   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
Saving to CSV...
‚úÖ CoskewACX.csv saved with 4179145 observations
CoskewACX translation complete!
============================================================
‚úÖ Completed: CoskewACX.py
Execution time: 88.46 seconds


üîÑ Starting: Coskewness.py
============================================================
Loading monthly CRSP data...
Loaded monthlyCRSP: (5153763, 18) rows
Loading monthly Fama-French data...
Loaded monthlyFF: (1188, 6) rows
Merging CRSP and FF data...
After merging with FF: (5150010, 20) rows
Data ready for processing: (5150010, 19) rows
Generated m60 variable with values 0-59
Starting 60-batch processing loop...
Processing batch 1/60...
  Batch 1: 3914622 observations after time assignment
  Batch 1: 73434 final observations
Processing batch 2/60...
  Batch 2: 3920954 observations after time assignment
  Batch 2: 73418 final observations
Processing batch 3/60...
  Batch 3: 3930228 observations after time assignment
  Batch 3: 73485 final observations
Processing batch 4/60...
  Batch 4: 3936849 observations after time assignment
  Batch 4: 73487 final observations
Processing batch 5/60...
  Batch 5: 3947083 observations after time assignment
  Batch 5: 73610 final observations
Processing batch 6/60...
  Batch 6: 3953857 observations after time assignment
  Batch 6: 73690 final observations
Processing batch 7/60...
  Batch 7: 3958786 observations after time assignment
  Batch 7: 73718 final observations
Processing batch 8/60...
  Batch 8: 3966657 observations after time assignment
  Batch 8: 73707 final observations
Processing batch 9/60...
  Batch 9: 3972098 observations after time assignment
  Batch 9: 73651 final observations
Processing batch 10/60...
  Batch 10: 3979291 observations after time assignment
  Batch 10: 73741 final observations
Processing batch 11/60...
  Batch 11: 3986631 observations after time assignment
  Batch 11: 73818 final observations
Processing batch 12/60...
  Batch 12: 3993311 observations after time assignment
  Batch 12: 73854 final observations
Processing batch 13/60...
  Batch 13: 3994640 observations after time assignment
  Batch 13: 73700 final observations
Processing batch 14/60...
  Batch 14: 4001278 observations after time assignment
  Batch 14: 73703 final observations
Processing batch 15/60...
  Batch 15: 4012120 observations after time assignment
  Batch 15: 73778 final observations
Processing batch 16/60...
  Batch 16: 4019683 observations after time assignment
  Batch 16: 73800 final observations
Processing batch 17/60...
  Batch 17: 4026528 observations after time assignment
  Batch 17: 73807 final observations
Processing batch 18/60...
  Batch 18: 4035080 observations after time assignment
  Batch 18: 74041 final observations
Processing batch 19/60...
  Batch 19: 4043026 observations after time assignment
  Batch 19: 74204 final observations
Processing batch 20/60...
  Batch 20: 4053320 observations after time assignment
  Batch 20: 74345 final observations
Processing batch 21/60...
  Batch 21: 4061445 observations after time assignment
  Batch 21: 74407 final observations
Processing batch 22/60...
  Batch 22: 4073119 observations after time assignment
  Batch 22: 74587 final observations
Processing batch 23/60...
  Batch 23: 4082686 observations after time assignment
  Batch 23: 74726 final observations
Processing batch 24/60...
  Batch 24: 4091912 observations after time assignment
  Batch 24: 74890 final observations
Processing batch 25/60...
  Batch 25: 4093565 observations after time assignment
  Batch 25: 74761 final observations
Processing batch 26/60...
  Batch 26: 4105875 observations after time assignment
  Batch 26: 74850 final observations
Processing batch 27/60...
  Batch 27: 4119577 observations after time assignment
  Batch 27: 75168 final observations
Processing batch 28/60...
  Batch 28: 4128351 observations after time assignment
  Batch 28: 75400 final observations
Processing batch 29/60...
  Batch 29: 4138703 observations after time assignment
  Batch 29: 75730 final observations
Processing batch 30/60...
  Batch 30: 4148217 observations after time assignment
  Batch 30: 76575 final observations
Processing batch 31/60...
  Batch 31: 4153874 observations after time assignment
  Batch 31: 76825 final observations
Processing batch 32/60...
  Batch 32: 4158241 observations after time assignment
  Batch 32: 76821 final observations
Processing batch 33/60...
  Batch 33: 4163439 observations after time assignment
  Batch 33: 76900 final observations
Processing batch 34/60...
  Batch 34: 4170894 observations after time assignment
  Batch 34: 77130 final observations
Processing batch 35/60...
  Batch 35: 4176977 observations after time assignment
  Batch 35: 77278 final observations
Processing batch 36/60...
  Batch 36: 4189057 observations after time assignment
  Batch 36: 77513 final observations
Processing batch 37/60...
  Batch 37: 4192051 observations after time assignment
  Batch 37: 77414 final observations
Processing batch 38/60...
  Batch 38: 4202245 observations after time assignment
  Batch 38: 77551 final observations
Processing batch 39/60...
  Batch 39: 4212354 observations after time assignment
  Batch 39: 77674 final observations
Processing batch 40/60...
  Batch 40: 4218136 observations after time assignment
  Batch 40: 77645 final observations
Processing batch 41/60...
  Batch 41: 4225288 observations after time assignment
  Batch 41: 77697 final observations
Processing batch 42/60...
  Batch 42: 4233999 observations after time assignment
  Batch 42: 77817 final observations
Processing batch 43/60...
  Batch 43: 4238948 observations after time assignment
  Batch 43: 78637 final observations
Processing batch 44/60...
  Batch 44: 4246853 observations after time assignment
  Batch 44: 78681 final observations
Processing batch 45/60...
  Batch 45: 4255845 observations after time assignment
  Batch 45: 78695 final observations
Processing batch 46/60...
  Batch 46: 4265646 observations after time assignment
  Batch 46: 78824 final observations
Processing batch 47/60...
  Batch 47: 4271719 observations after time assignment
  Batch 47: 79008 final observations
Processing batch 48/60...
  Batch 48: 4280329 observations after time assignment
  Batch 48: 81419 final observations
Processing batch 49/60...
  Batch 49: 4279390 observations after time assignment
  Batch 49: 81194 final observations
Processing batch 50/60...
  Batch 50: 4288923 observations after time assignment
  Batch 50: 81202 final observations
Processing batch 51/60...
  Batch 51: 4297370 observations after time assignment
  Batch 51: 81239 final observations
Processing batch 52/60...
  Batch 52: 4305370 observations after time assignment
  Batch 52: 81291 final observations
Processing batch 53/60...
  Batch 53: 4315479 observations after time assignment
  Batch 53: 81408 final observations
Processing batch 54/60...
  Batch 54: 4325582 observations after time assignment
  Batch 54: 81590 final observations
Processing batch 55/60...
  Batch 55: 4332723 observations after time assignment
  Batch 55: 81668 final observations
Processing batch 56/60...
  Batch 56: 4341627 observations after time assignment
  Batch 56: 81759 final observations
Processing batch 57/60...
  Batch 57: 4351337 observations after time assignment
  Batch 57: 81872 final observations
Processing batch 58/60...
  Batch 58: 4358505 observations after time assignment
  Batch 58: 81987 final observations
Processing batch 59/60...
  Batch 59: 4366507 observations after time assignment
  Batch 59: 82106 final observations
Processing batch 60/60...
  Batch 60: 4373841 observations after time assignment
  Batch 60: 82228 final observations
Combining all batches...
Final combined dataset: (4609158, 3) rows
Final summary statistics:
shape: (9, 4)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ statistic  ‚îÜ permno       ‚îÜ yyyymm        ‚îÜ Coskewness ‚îÇ
‚îÇ ---        ‚îÜ ---          ‚îÜ ---           ‚îÜ ---        ‚îÇ
‚îÇ str        ‚îÜ f64          ‚îÜ f64           ‚îÜ f64        ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ count      ‚îÜ 4.609158e6   ‚îÜ 4.609158e6    ‚îÜ 4.609158e6 ‚îÇ
‚îÇ null_count ‚îÜ 0.0          ‚îÜ 0.0           ‚îÜ 0.0        ‚îÇ
‚îÇ mean       ‚îÜ 52288.249363 ‚îÜ 199446.017069 ‚îÜ -0.200026  ‚îÇ
‚îÇ std        ‚îÜ 29515.076279 ‚îÜ 2104.481887   ‚îÜ 0.38264    ‚îÇ
‚îÇ min        ‚îÜ 10000.0      ‚îÜ 192706.0      ‚îÜ -4.491474  ‚îÇ
‚îÇ 25%        ‚îÜ 20802.0      ‚îÜ 198208.0      ‚îÜ -0.384794  ‚îÇ
‚îÇ 50%        ‚îÜ 54148.0      ‚îÜ 199708.0      ‚îÜ -0.179385  ‚îÇ
‚îÇ 75%        ‚îÜ 80581.0      ‚îÜ 201107.0      ‚îÜ 0.012408   ‚îÇ
‚îÇ max        ‚îÜ 93436.0      ‚îÜ 202412.0      ‚îÜ 2.53694    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
Saving to CSV...
‚úÖ Coskewness.csv saved with 4609158 observations
Coskewness translation complete!
============================================================
‚úÖ Completed: Coskewness.py
Execution time: 15.19 seconds


üîÑ Starting: CPVolSpread.py
============================================================
Starting CPVolSpread.py...
Loading and cleaning OptionMetrics data...
Cleaned OptionMetrics data: 1867260 rows, 8 columns
Computed CPVolSpread for 881808 observations
Loading SignalMasterTable...
After merging with options data: 1802872 rows
After filtering closed-end funds and REITs: 1798132 rows
Final CPVolSpread for 691983 observations
saving CPVolSpread
Saved 691983 rows to ../pyData/Predictors/CPVolSpread.csv
CPVolSpread.py completed successfully
============================================================
‚úÖ Completed: CPVolSpread.py
Execution time: 2.11 seconds


üîÑ Starting: CredRatDG.py
============================================================
Starting CredRatDG predictor...
Loading m_SP_creditratings data...
Generated dataset of 12,902 SP downgrades
Loading m_CIQ_creditratings data...
Loading SignalMasterTable...
Loaded 3,041,670 SignalMasterTable observations
Merging data...
After merging: 3,041,670 observations
Constructing CredRatDG signal...
Saving predictor...
saving CredRatDG
Saved 3041670 rows to ../pyData/Predictors/CredRatDG.csv
CredRatDG predictor completed successfully!
============================================================
‚úÖ Completed: CredRatDG.py
Execution time: 1.77 seconds


üîÑ Starting: CustomerMomentum.py
============================================================
2025-09-15 14:22:22,261 - INFO - Starting customer momentum processing...
2025-09-15 14:22:22,261 - INFO - Loading input data...
2025-09-15 14:22:22,626 - INFO - Loaded customer segments: 704,826 rows
2025-09-15 14:22:22,666 - INFO - Loaded CCM linking: 31,908 rows
2025-09-15 14:22:22,797 - INFO - Loaded CRSP monthly: 5,153,763 rows
2025-09-15 14:22:22,797 - INFO - Cleaning customer data...
2025-09-15 14:22:23,642 - INFO - After cleaning customer data: 224,325 rows
2025-09-15 14:22:23,642 - INFO - Cleaning CCM data...
2025-09-15 14:22:23,737 - INFO - Cleaned CCM data: 31,908 rows
2025-09-15 14:22:23,737 - INFO - Adding permno data...
2025-09-15 14:22:23,792 - INFO - After inner join with CCM: 253,132 rows
2025-09-15 14:22:23,832 - INFO - After date filtering: 181,366 rows
2025-09-15 14:22:23,865 - INFO - After customer name matching: 210,449 rows
2025-09-15 14:22:23,870 - INFO - After customer filtering: 45,703 rows
2025-09-15 14:22:23,876 - INFO - Final customer-firm relationships: 45,703 rows
2025-09-15 14:22:23,876 - INFO - Creating monthly frame...
2025-09-15 14:22:24,024 - INFO - Monthly frame: 1,037,578 rows
2025-09-15 14:22:24,025 - INFO - Creating wide customer data...
2025-09-15 14:22:24,049 - INFO - Wide format data: 26,903 rows, 26 customer columns
2025-09-15 14:22:24,058 - INFO - Wide customer data with stop rows: 31,832 rows
2025-09-15 14:22:24,058 - INFO - Merging and filling customer data...
2025-09-15 14:22:24,881 - INFO - Long customer data after fill: 601,447 rows
2025-09-15 14:22:24,881 - INFO - Calculating customer momentum...
2025-09-15 14:22:24,955 - INFO - Customer returns: 696,734 rows
2025-09-15 14:22:25,001 - INFO - After merging customer returns: 561,201 rows
2025-09-15 14:22:25,048 - INFO - Final customer momentum: 356,474 rows
2025-09-15 14:22:25,049 - INFO - Saving predictor...
2025-09-15 14:22:25,070 - INFO - CustomerMomentum predictor completed successfully!
saving CustomerMomentum
Saved 356474 rows to ../pyData/Predictors/CustomerMomentum.csv
============================================================
‚úÖ Completed: CustomerMomentum.py
Execution time: 3.21 seconds


üîÑ Starting: dCPVolSpread.py
============================================================
Starting dCPVolSpread.py...
Loading OptionMetrics volatility surface data...
Loaded options data: 4617772 rows
After screening: 2308886 rows
Calculating volatility changes...
Merging with SignalMasterTable...
After merge: 4047630 rows
Calculated dCPVolSpread for 862966 observations
saving dCPVolSpread
Saved 862966 rows to ../pyData/Predictors/dCPVolSpread.csv
dCPVolSpread.py completed successfully
============================================================
‚úÖ Completed: dCPVolSpread.py
Execution time: 2.49 seconds


üîÑ Starting: DebtIssuance.py
============================================================
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
Starting DebtIssuance predictor...
Loading m_aCompustat data...
Loaded 3,626,619 Compustat observations
Loading SignalMasterTable...
Loaded 4,047,630 SignalMasterTable observations
Merging data...
After merging: 3,041,670 observations
Constructing DebtIssuance signal...
Generated DebtIssuance values for 2,726,040 observations
Saving predictor...
saving DebtIssuance
Saved 2726040 rows to ../pyData/Predictors/DebtIssuance.csv
DebtIssuance predictor completed successfully!
============================================================
‚úÖ Completed: DebtIssuance.py
Execution time: 2.21 seconds


üîÑ Starting: DelBreadth.py
============================================================
DelBreadth predictor saved successfully
============================================================
‚úÖ Completed: DelBreadth.py
Execution time: 1.81 seconds


üîÑ Starting: DelCOA.py
============================================================
Starting DelCOA.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 6 columns
Deduplicating by permno time_avail_m...
After deduplication: 3626619 rows
Setting up panel data structure...
Creating lag variables...
Creating tempAvAT...
Calculating DelCOA...
Calculated DelCOA for 3312651 observations
saving DelCOA
Saved 3312651 rows to ../pyData/Predictors/DelCOA.csv
DelCOA.py completed successfully
============================================================
‚úÖ Completed: DelCOA.py
Execution time: 1.64 seconds


üîÑ Starting: DelCOL.py
============================================================
Starting DelCOL.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 6 columns
Deduplicating by permno time_avail_m...
After deduplication: 3626619 rows
Setting up panel data structure...
Creating lag variables...
Creating tempAvAT...
Calculating DelCOL...
Calculated DelCOL for 3277042 observations
saving DelCOL
Saved 3277042 rows to ../pyData/Predictors/DelCOL.csv
DelCOL.py completed successfully
============================================================
‚úÖ Completed: DelCOL.py
Execution time: 1.59 seconds


üîÑ Starting: DelDRC.py
============================================================
Starting DelDRC.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 8 columns
Deduplicating by permno time_avail_m...
After deduplication: 3626619 rows
Setting up panel data structure...
Ensuring sic is numeric...
Creating lag variables...
Calculating DelDRC...
Applying filters...
Calculated DelDRC for 462838 observations
saving DelDRC
Saved 462838 rows to ../pyData/Predictors/DelDRC.csv
DelDRC.py completed successfully
============================================================
‚úÖ Completed: DelDRC.py
Execution time: 2.16 seconds


üîÑ Starting: DelEqu.py
============================================================
DelEqu: Saved 3,196,344 observations
============================================================
‚úÖ Completed: DelEqu.py
Execution time: 3.74 seconds


üîÑ Starting: DelFINL.py
============================================================
DelFINL: Saved 3,252,769 observations
============================================================
‚úÖ Completed: DelFINL.py
Execution time: 3.84 seconds


üîÑ Starting: DelLTI.py
============================================================
DelLTI: Saved 3,296,976 observations
============================================================
‚úÖ Completed: DelLTI.py
Execution time: 3.26 seconds


üîÑ Starting: DelNetFin.py
============================================================
DelNetFin: Saved 3,252,769 observations
============================================================
‚úÖ Completed: DelNetFin.py
Execution time: 3.91 seconds


üîÑ Starting: DivInit.py
============================================================
================================================================================
üèóÔ∏è  DivInit.py
Creating dividend initiation predictor
================================================================================
üìä Loading distributions data...
Loaded distributions: 1,064,085 observations
üßÆ Computing dividend initiation signal...
üíæ Saving DivInit predictor...
saving DivInit
Saved 4112633 rows to ../pyData/Predictors/DivInit.csv
‚úÖ DivInit.csv saved successfully
================================================================================
‚úÖ DivInit.py Complete
Dividend initiation predictor generated successfully
================================================================================
============================================================
‚úÖ Completed: DivInit.py
Execution time: 2.20 seconds


üîÑ Starting: DivOmit.py
============================================================
DivOmit predictor saved successfully
============================================================
‚úÖ Completed: DivOmit.py
Execution time: 6.24 seconds


üîÑ Starting: DivSeason.py
============================================================
Starting DivSeason.py...
Loading CRSP distributions data...
Loaded distributions data: 1064085 rows
After filtering for regular cash dividends: 974654 rows
Loading SignalMasterTable...
Loaded SignalMasterTable: 4047630 rows
Merging with dividend amounts...
After merge: 4047630 rows
Calculating DivSeason signal...
Creating 12-month rolling dividend payments...
Creating lag variables for dividend prediction...
Calculated DivSeason for 1785982 observations
saving DivSeason
Saved 1785982 rows to ../pyData/Predictors/DivSeason.csv
DivSeason.py completed successfully
============================================================
‚úÖ Completed: DivSeason.py
Execution time: 1.91 seconds


üîÑ Starting: DivYieldST.py
============================================================
DivYieldST predictor saved successfully
============================================================
‚úÖ Completed: DivYieldST.py
Execution time: 4.08 seconds


üîÑ Starting: dNoa.py
============================================================
Starting dNoa predictor...
Loading m_aCompustat data...
Loaded 3,626,619 m_aCompustat observations
Deduplicating by permno time_avail_m...
After deduplication: 3,626,619 observations
Constructing dNoa signal...
Generated dNoa values for 3,196,266 observations
Saving predictor...
saving dNoa
Saved 3196266 rows to ../pyData/Predictors/dNoa.csv
dNoa predictor completed successfully!
============================================================
‚úÖ Completed: dNoa.py
Execution time: 1.61 seconds


üîÑ Starting: DolVol.py
============================================================
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
DolVol predictor saved successfully
============================================================
‚úÖ Completed: DolVol.py
Execution time: 4.97 seconds


üîÑ Starting: DownRecomm.py
============================================================
DownRecomm predictor created with 464223 observations
============================================================
‚úÖ Completed: DownRecomm.py
Execution time: 19.84 seconds


üîÑ Starting: dVolCall.py
============================================================
Starting dVolCall.py...
Loading data...
Calculated dVolCall for 862966 observations
saving dVolCall
Saved 862966 rows to ../pyData/Predictors/dVolCall.csv
dVolCall.py completed successfully
============================================================
‚úÖ Completed: dVolCall.py
Execution time: 2.00 seconds


üîÑ Starting: dVolPut.py
============================================================
Starting dVolPut.py...
Loading data...
Calculated dVolPut for 862966 observations
saving dVolPut
Saved 862966 rows to ../pyData/Predictors/dVolPut.csv
dVolPut.py completed successfully
============================================================
‚úÖ Completed: dVolPut.py
Execution time: 2.01 seconds


üîÑ Starting: EarningsConsistency.py
============================================================
Starting EarningsConsistency.py...
Loading m_aCompustat data...
Loaded data: 3626619 rows
Setting up panel data structure...
Creating lag variables for earnings...
Creating additional lag variables for earnings growth...
Calculating earnings consistency...
Calculated EarningsConsistency for 1387650 observations
saving EarningsConsistency
Saved 1387650 rows to ../pyData/Predictors/EarningsConsistency.csv
EarningsConsistency.py completed successfully
============================================================
‚úÖ Completed: EarningsConsistency.py
Execution time: 1.92 seconds


üîÑ Starting: EarningsForecastDisparity.py
============================================================
Starting EarningsForecastDisparity.py...
============================================================
‚úÖ Completed: EarningsForecastDisparity.py
Execution time: 4.27 seconds


üîÑ Starting: EarningsStreak.py
============================================================
EarningsStreak predictor created with 1225439 observations
============================================================
‚úÖ Completed: EarningsStreak.py
Execution time: 4.73 seconds


üîÑ Starting: EarningsSurprise.py
============================================================
EarningsSurprise predictor created with 2324021 observations
============================================================
‚úÖ Completed: EarningsSurprise.py
Execution time: 10.95 seconds


üîÑ Starting: EarnSupBig.py
============================================================
Creating EarnSupBig predictor...
Final dataset has 3775465 observations with 2336094 non-missing EarnSupBig values
saving EarnSupBig
Saved 2336094 rows to ../pyData/Predictors/EarnSupBig.csv
EarnSupBig predictor saved successfully
============================================================
‚úÖ Completed: EarnSupBig.py
Execution time: 42.31 seconds


üîÑ Starting: EntMult.py
============================================================
EntMult predictor saved successfully
============================================================
‚úÖ Completed: EntMult.py
Execution time: 3.89 seconds


üîÑ Starting: EP.py
============================================================
EP: Saved 2,203,173 observations
============================================================
‚úÖ Completed: EP.py
Execution time: 3.38 seconds


üîÑ Starting: EquityDuration.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/EquityDuration.py:98: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_monthly['temp_na_sort'] = df_monthly['EquityDuration'].isna()
Loading and processing EquityDuration...
Expanding to monthly observations...
EquityDuration predictor saved successfully
============================================================
‚úÖ Completed: EquityDuration.py
Execution time: 6.80 seconds


üîÑ Starting: ExchSwitch.py
============================================================
ExchSwitch predictor saved successfully
============================================================
‚úÖ Completed: ExchSwitch.py
Execution time: 4.21 seconds


üîÑ Starting: ExclExp.py
============================================================
ExclExp predictor saved successfully
============================================================
‚úÖ Completed: ExclExp.py
Execution time: 3.76 seconds


üîÑ Starting: FEPS.py
============================================================
Starting FEPS.py...
Loading and preparing IBES data...
Prepared IBES data: 2382154 rows, 3 columns
Loading SignalMasterTable...
Loaded SignalMasterTable: 4047630 rows, 3 columns
Merging with IBES data...
After merging with IBES data: 4047630 rows
Setting up panel data (sorting by permno, time_avail_m)...
Calculating FEPS...
Calculated FEPS for 1958211 observations
saving FEPS
Saved 1958211 rows to ../pyData/Predictors/FEPS.csv
FEPS.py completed successfully
============================================================
‚úÖ Completed: FEPS.py
Execution time: 1.72 seconds


üîÑ Starting: fgr5yrLag.py
============================================================
Loading IBES data...
IBES loaded: 7,842,868 rows
Filtering IBES...
Renaming IBES columns...
IBES ready: 1,423,499 rows
Loading Compustat data...
Compustat loaded: 3,626,619 rows
After dedup: 3,626,619 rows
Merging with SignalMasterTable...
After SMT merge: 3,041,670 rows
Optimizing IBES merge...
IBES filtered from 1,423,499 to 1,223,321 rows
After IBES merge: 1,138,573 rows
Filtering required variables...
After dropna: 996,104 rows
Calculating 6-month calendar lags...
fgr5yrLag predictor saved successfully
============================================================
‚úÖ Completed: fgr5yrLag.py
Execution time: 35.49 seconds


üîÑ Starting: FirmAge.py
============================================================
FirmAge predictor saved successfully
============================================================
‚úÖ Completed: FirmAge.py
Execution time: 3.09 seconds


üîÑ Starting: FirmAgeMom.py
============================================================
saving FirmAgeMom
Saved 550955 rows to ../pyData/Predictors/FirmAgeMom.csv
FirmAgeMom predictor completed
============================================================
‚úÖ Completed: FirmAgeMom.py
Execution time: 1.86 seconds


üîÑ Starting: ForecastDispersion.py
============================================================
Starting ForecastDispersion.py...
Loading and preparing IBES data...
Prepared IBES data: 2382154 rows, 9 columns
Loading SignalMasterTable...
Loaded SignalMasterTable: 4047630 rows, 3 columns
Merging with IBES data...
After merging with IBES data: 4047630 rows
Calculating ForecastDispersion...
Calculated ForecastDispersion for 1620034 observations
saving ForecastDispersion
Saved 1620034 rows to ../pyData/Predictors/ForecastDispersion.csv
ForecastDispersion.py completed successfully
============================================================
‚úÖ Completed: ForecastDispersion.py
Execution time: 1.68 seconds


üîÑ Starting: Frontier.py
============================================================
Frontier.py starting with max_year=None
Loading data...
Computing FF48 industry codes...
Processing 889 time periods (starting from 1950-12)...
Processed 151/889 periods (17.0%), stored 66 predictions for 1963-06
  Elapsed: 0.6s, Est. remaining: 63.8s, Avg: 0.087s/period (last 7 periods)
Processed 181/889 periods (20.4%), stored 55 predictions for 1965-12
  Elapsed: 1.0s, Est. remaining: 10.2s, Avg: 0.014s/period (last 30 periods)
Processed 211/889 periods (23.7%), stored 152 predictions for 1968-06
  Elapsed: 1.6s, Est. remaining: 13.7s, Avg: 0.020s/period (last 30 periods)
Processed 241/889 periods (27.1%), stored 191 predictions for 1970-12
  Elapsed: 2.5s, Est. remaining: 18.5s, Avg: 0.028s/period (last 30 periods)
Processed 271/889 periods (30.5%), stored 1230 predictions for 1973-06
  Elapsed: 4.4s, Est. remaining: 39.3s, Avg: 0.064s/period (last 30 periods)
Processed 301/889 periods (33.9%), stored 1600 predictions for 1975-12
  Elapsed: 8.5s, Est. remaining: 81.0s, Avg: 0.138s/period (last 30 periods)
Processed 331/889 periods (37.2%), stored 1487 predictions for 1978-06
  Elapsed: 13.6s, Est. remaining: 94.0s, Avg: 0.169s/period (last 30 periods)
Processed 361/889 periods (40.6%), stored 1527 predictions for 1980-12
  Elapsed: 18.8s, Est. remaining: 91.2s, Avg: 0.173s/period (last 30 periods)
Processed 391/889 periods (44.0%), stored 1714 predictions for 1983-06
  Elapsed: 24.2s, Est. remaining: 89.9s, Avg: 0.181s/period (last 30 periods)
Processed 421/889 periods (47.4%), stored 2048 predictions for 1985-12
  Elapsed: 30.2s, Est. remaining: 93.2s, Avg: 0.199s/period (last 30 periods)
Processed 451/889 periods (50.7%), stored 2144 predictions for 1988-06
  Elapsed: 36.7s, Est. remaining: 95.9s, Avg: 0.219s/period (last 30 periods)
Processed 481/889 periods (54.1%), stored 2013 predictions for 1990-12
  Elapsed: 43.6s, Est. remaining: 92.9s, Avg: 0.228s/period (last 30 periods)
Processed 511/889 periods (57.5%), stored 2244 predictions for 1993-06
  Elapsed: 50.5s, Est. remaining: 87.4s, Avg: 0.231s/period (last 30 periods)
Processed 541/889 periods (60.9%), stored 2616 predictions for 1995-12
  Elapsed: 58.0s, Est. remaining: 87.1s, Avg: 0.250s/period (last 30 periods)
Processed 571/889 periods (64.2%), stored 3163 predictions for 1998-06
  Elapsed: 66.7s, Est. remaining: 92.3s, Avg: 0.290s/period (last 30 periods)
Processed 601/889 periods (67.6%), stored 2723 predictions for 2000-12
  Elapsed: 75.9s, Est. remaining: 87.9s, Avg: 0.305s/period (last 30 periods)
Processed 631/889 periods (71.0%), stored 2437 predictions for 2003-06
  Elapsed: 84.5s, Est. remaining: 74.1s, Avg: 0.287s/period (last 30 periods)
Processed 661/889 periods (74.4%), stored 2283 predictions for 2005-12
  Elapsed: 92.3s, Est. remaining: 59.2s, Avg: 0.259s/period (last 30 periods)
Processed 691/889 periods (77.7%), stored 2180 predictions for 2008-06
  Elapsed: 99.6s, Est. remaining: 48.4s, Avg: 0.245s/period (last 30 periods)
Processed 721/889 periods (81.1%), stored 1838 predictions for 2010-12
  Elapsed: 106.4s, Est. remaining: 38.0s, Avg: 0.226s/period (last 30 periods)
Processed 751/889 periods (84.5%), stored 1667 predictions for 2013-06
  Elapsed: 112.5s, Est. remaining: 28.0s, Avg: 0.203s/period (last 30 periods)
Processed 781/889 periods (87.9%), stored 1578 predictions for 2015-12
  Elapsed: 118.1s, Est. remaining: 20.3s, Avg: 0.188s/period (last 30 periods)
Processed 811/889 periods (91.2%), stored 1409 predictions for 2018-06
  Elapsed: 123.4s, Est. remaining: 13.6s, Avg: 0.174s/period (last 30 periods)
Processed 841/889 periods (94.6%), stored 1259 predictions for 2020-12
  Elapsed: 128.2s, Est. remaining: 7.8s, Avg: 0.163s/period (last 30 periods)
Processed 871/889 periods (98.0%), stored 1296 predictions for 2023-06
  Elapsed: 132.8s, Est. remaining: 2.8s, Avg: 0.153s/period (last 30 periods)
Total predictions generated: 1222287
Before ceq filter: 2860911
After ceq filter: 2695300
Before dropping NaN Frontier: 2695300
Final output: 1221161 observations

Timing Summary:
Total execution time: 157.84 seconds (2.63 minutes)
Processed 889 periods at 6.50 periods/second
Frontier predictor saved successfully
============================================================
‚úÖ Completed: Frontier.py
Execution time: 158.83 seconds


üîÑ Starting: Governance.py
============================================================
Governance predictor saved successfully
============================================================
‚úÖ Completed: Governance.py
Execution time: 1.32 seconds


üîÑ Starting: GP.py
============================================================
GP: Saved 2,973,415 observations
============================================================
‚úÖ Completed: GP.py
Execution time: 3.45 seconds


üîÑ Starting: GrAdExp.py
============================================================
Starting GrAdExp.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 4 columns
Removing duplicate observations...
Merging with SignalMasterTable...
After merging with SignalMasterTable: 3626619 rows
Sorting data by permno and time_avail_m...
Calculating GrAdExp...
Calculating size deciles...
Applying filters...
Filtered out 145982 observations (xad < 0.1 or smallest size decile)
Final GrAdExp calculated for 906035 observations
saving GrAdExp
Saved 906035 rows to ../pyData/Predictors/GrAdExp.csv
GrAdExp.py completed successfully
============================================================
‚úÖ Completed: GrAdExp.py
Execution time: 2.59 seconds


üîÑ Starting: GrLTNOA.py
============================================================
Starting GrLTNOA.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 14 columns
Removing duplicate observations...
Setting up panel data (sorting by permno, time_avail_m)...
Calculating 12-month lags...
Calculating GrLTNOA...
Calculated GrLTNOA for 3236580 observations
saving GrLTNOA
Saved 3236580 rows to ../pyData/Predictors/GrLTNOA.csv
GrLTNOA.py completed successfully
============================================================
‚úÖ Completed: GrLTNOA.py
Execution time: 2.03 seconds


üîÑ Starting: GrSaleToGrInv.py
============================================================
Starting GrSaleToGrInv.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 5 columns
Removing duplicate permno-time_avail_m observations...
Setting up panel data (sorting by permno, time_avail_m)...
Calculating 12 and 24-month lags...
Calculating primary GrSaleToGrInv formula...
Applying fallback formula for missing values...
Calculated GrSaleToGrInv for 2546202 observations
saving GrSaleToGrInv
Saved 2546202 rows to ../pyData/Predictors/GrSaleToGrInv.csv
GrSaleToGrInv.py completed successfully
============================================================
‚úÖ Completed: GrSaleToGrInv.py
Execution time: 1.64 seconds


üîÑ Starting: GrSaleToGrOverhead.py
============================================================
Starting GrSaleToGrOverhead.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 5 columns
Removing duplicate observations...
Setting up panel data (sorting by permno, time_avail_m)...
Calculating 12-month and 24-month lags...
Calculating GrSaleToGrOverhead using primary formula...
Applying fallback formula where primary formula is missing...
Calculated GrSaleToGrOverhead for 2682273 observations
saving GrSaleToGrOverhead
Saved 2682273 rows to ../pyData/Predictors/GrSaleToGrOverhead.csv
GrSaleToGrOverhead.py completed successfully
============================================================
‚úÖ Completed: GrSaleToGrOverhead.py
Execution time: 1.61 seconds


üîÑ Starting: Herf.py
============================================================
Herf predictor saved successfully
============================================================
‚úÖ Completed: Herf.py
Execution time: 6.71 seconds


üîÑ Starting: HerfAsset.py
============================================================
HerfAsset predictor saved successfully
============================================================
‚úÖ Completed: HerfAsset.py
Execution time: 5.66 seconds


üîÑ Starting: HerfBE.py
============================================================
HerfBE predictor saved successfully
============================================================
‚úÖ Completed: HerfBE.py
Execution time: 6.04 seconds


üîÑ Starting: High52.py
============================================================
Starting High52 calculation...
Loaded dailyCRSP data: 107662961 observations
After collapse by permno and time_avail_m: 5116571 observations
High52 calculated for 4995429 observations
saving High52
Saved 4995429 rows to ../pyData/Predictors/High52.csv
High52.csv saved successfully
============================================================
‚úÖ Completed: High52.py
Execution time: 12.65 seconds


üîÑ Starting: hire.py
============================================================
hire: Saved 3,499,155 observations
============================================================
‚úÖ Completed: hire.py
Execution time: 3.94 seconds


üîÑ Starting: Illiquidity.py
============================================================
Loading dailyCRSP data...
Constructing Illiquidity signal...
Final dataset shape: (4278152, 3)
Sample of final data:
    permno  yyyymm  Illiquidity
11   10000  198612     0.000004
12   10000  198701     0.000004
13   10000  198702     0.000005
14   10000  198703     0.000008
15   10000  198704     0.000008
Saved to ../pyData/Predictors/Illiquidity.csv
============================================================
‚úÖ Completed: Illiquidity.py
Execution time: 13.13 seconds


üîÑ Starting: IndIPO.py
============================================================
IndIPO predictor saved successfully
============================================================
‚úÖ Completed: IndIPO.py
Execution time: 2.58 seconds


üîÑ Starting: IndMom.py
============================================================
saving IndMom
Saved 4043138 rows to ../pyData/Predictors/IndMom.csv
============================================================
‚úÖ Completed: IndMom.py
Execution time: 25.60 seconds


üîÑ Starting: IndRetBig.py
============================================================
saving IndRetBig
Saved 2616696 rows to ../pyData/Predictors/IndRetBig.csv
IndRetBig predictor saved successfully
============================================================
‚úÖ Completed: IndRetBig.py
Execution time: 28.08 seconds


üîÑ Starting: IntMom.py
============================================================
saving IntMom
Saved 3686625 rows to ../pyData/Predictors/IntMom.csv
Saved 4047630 observations to IntMom.csv
============================================================
‚úÖ Completed: IntMom.py
Execution time: 4.45 seconds


üîÑ Starting: Investment.py
============================================================
Investment predictor saved successfully
============================================================
‚úÖ Completed: Investment.py
Execution time: 3.92 seconds


üîÑ Starting: InvestPPEInv.py
============================================================
Starting InvestPPEInv.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 6 columns
Removing duplicate permno-time_avail_m observations...
Removed 0 duplicate observations
Setting up panel data (sorting by permno, time_avail_m)...
Calculating 12-month lags...
Calculating tempPPE...
Calculating tempInv...
Calculating InvestPPEInv...
Calculated InvestPPEInv for 2944339 observations
saving InvestPPEInv
Saved 2944339 rows to ../pyData/Predictors/InvestPPEInv.csv
InvestPPEInv.py completed successfully
============================================================
‚úÖ Completed: InvestPPEInv.py
Execution time: 1.69 seconds


üîÑ Starting: InvGrowth.py
============================================================
Starting InvGrowth predictor...
Loading m_aCompustat data...
Loaded 3,626,619 Compustat observations
Loading GNPdefl data...
Loaded 942 GNPdefl observations
Merging with GNPdefl...
After merging with GNPdefl: 3,586,693 observations
Adjusting invt for inflation...
Applying sample selection filters...
After SIC filter (dropped SIC 4xxx and 6xxx): 2,626,087 observations (dropped 960,606)
After AT/PPENT filter: 2,606,502 observations (dropped 19,585)
Constructing InvGrowth signal...
After deduplication: 2,606,502 observations (dropped 0 duplicates)
Calculating 12-month lag for inventory growth...
Implementing efficient calendar-based 12-month lag...
Generated InvGrowth values for 2,003,209 observations
Saving predictor...
saving InvGrowth
Saved 2003209 rows to ../pyData/Predictors/InvGrowth.csv
InvGrowth predictor completed successfully!
============================================================
‚úÖ Completed: InvGrowth.py
Execution time: 3.74 seconds


üîÑ Starting: IO_ShortInterest.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/IO_ShortInterest.py:54: FutureWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.
  temps99_by_month = df.groupby('time_avail_m').apply(
Starting IO_ShortInterest.py...
Loading data...
Calculated IO_ShortInterest for 16077 observations
saving IO_ShortInterest
Saved 16077 rows to ../pyData/Predictors/IO_ShortInterest.csv
IO_ShortInterest.py completed successfully
============================================================
‚úÖ Completed: IO_ShortInterest.py
Execution time: 3.38 seconds


üîÑ Starting: Leverage.py
============================================================
Leverage: Saved 3,014,676 observations
============================================================
‚úÖ Completed: Leverage.py
Execution time: 3.38 seconds


üîÑ Starting: LRreversal.py
============================================================
LRreversal predictor saved successfully
============================================================
‚úÖ Completed: LRreversal.py
Execution time: 4.01 seconds


üîÑ Starting: MaxRet.py
============================================================
MaxRet predictor saved successfully
============================================================
‚úÖ Completed: MaxRet.py
Execution time: 13.90 seconds


üîÑ Starting: MeanRankRevGrowth.py
============================================================
MeanRankRevGrowth predictor saved successfully
============================================================
‚úÖ Completed: MeanRankRevGrowth.py
Execution time: 6.91 seconds


üîÑ Starting: Mom12m.py
============================================================
================================================================================
üèóÔ∏è  Mom12m.py
Creating twelve-month momentum predictor
================================================================================
üìä Loading SignalMasterTable data...
Loaded: 4,047,630 observations
üßÆ Computing 12-month momentum signal...
üíæ Saving Mom12m predictor...
saving Mom12m
Saved 3715128 rows to ../pyData/Predictors/Mom12m.csv
‚úÖ Mom12m.csv saved successfully
================================================================================
‚úÖ Mom12m.py Complete
Twelve-month momentum predictor generated successfully
================================================================================
============================================================
‚úÖ Completed: Mom12m.py
Execution time: 1.48 seconds


üîÑ Starting: Mom12mOffSeason.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/Mom12mOffSeason.py:107: FutureWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.
  df = df.groupby('permno', group_keys=False).apply(calculate_calendar_rolling_fast)
Starting Mom12mOffSeason predictor translation...
Loading SignalMasterTable...
Loaded 4047630 observations
Data sorted by permno and time_avail_m
Starting signal construction...
Replaced missing returns with 0
Computing 10-month calendar-based rolling statistics excluding focal return...
Computing true calendar-based rolling statistics (this may take several minutes)...
Processing groups (this will take time for large dataset)...
Generated 3865561 valid Mom12mOffSeason observations
saving Mom12mOffSeason
Saved 3865561 rows to ../pyData/Predictors/Mom12mOffSeason.csv
============================================================
‚úÖ Completed: Mom12mOffSeason.py
Execution time: 23.77 seconds


üîÑ Starting: Mom6m.py
============================================================
================================================================================
üèóÔ∏è  Mom6m.py
Creating six-month momentum predictor
================================================================================
üìä Loading SignalMasterTable data...
Loaded: 4,047,630 observations
üßÆ Computing 6-month momentum signal...
üíæ Saving Mom6m predictor...
saving Mom6m
Saved 3895206 rows to ../pyData/Predictors/Mom6m.csv
‚úÖ Mom6m.csv saved successfully
================================================================================
‚úÖ Mom6m.py Complete
Six-month momentum predictor generated successfully
================================================================================
============================================================
‚úÖ Completed: Mom6m.py
Execution time: 1.35 seconds


üîÑ Starting: Mom6mJunk.py
============================================================
left join with sp ratings, nrow = 3041670
left join with ciq ratings, nrow = 3041670
saving Mom6mJunk
Saved 346535 rows to ../pyData/Predictors/Mom6mJunk.csv
Mom6mJunk saved with 3041670 observations
============================================================
‚úÖ Completed: Mom6mJunk.py
Execution time: 4.13 seconds


üîÑ Starting: MomOffSeason.py
============================================================
Starting MomOffSeason.py...
Loading SignalMasterTable...
Loaded data: 4047630 rows
Filling missing returns with 0...
Creating lag variables for returns (23, 35, 47, 59 months)...
Calculating MomOffSeason signal...
Calculated MomOffSeason for 3436969 observations
saving MomOffSeason
Saved 3436969 rows to ../pyData/Predictors/MomOffSeason.csv
MomOffSeason.py completed successfully
============================================================
‚úÖ Completed: MomOffSeason.py
Execution time: 3.14 seconds


üîÑ Starting: MomOffSeason06YrPlus.py
============================================================
Starting MomOffSeason06YrPlus.py...
Loading data...
Calculated MomOffSeason06YrPlus for 2472210 observations
saving MomOffSeason06YrPlus
Saved 2472210 rows to ../pyData/Predictors/MomOffSeason06YrPlus.csv
MomOffSeason06YrPlus.py completed successfully
============================================================
‚úÖ Completed: MomOffSeason06YrPlus.py
Execution time: 3.15 seconds


üîÑ Starting: MomOffSeason11YrPlus.py
============================================================
Starting MomOffSeason11YrPlus.py...
Loading data...
Calculated MomOffSeason11YrPlus for 1707608 observations
saving MomOffSeason11YrPlus
Saved 1707608 rows to ../pyData/Predictors/MomOffSeason11YrPlus.csv
MomOffSeason11YrPlus.py completed successfully
============================================================
‚úÖ Completed: MomOffSeason11YrPlus.py
Execution time: 3.10 seconds


üîÑ Starting: MomOffSeason16YrPlus.py
============================================================
Starting MomOffSeason16YrPlus.py...
Loading data...
Calculated MomOffSeason16YrPlus for 1044703 observations
saving MomOffSeason16YrPlus
Saved 1044703 rows to ../pyData/Predictors/MomOffSeason16YrPlus.csv
MomOffSeason16YrPlus.py completed successfully
============================================================
‚úÖ Completed: MomOffSeason16YrPlus.py
Execution time: 3.12 seconds


üîÑ Starting: MomRev.py
============================================================
================================================================================
üèóÔ∏è  MomRev.py
Creating momentum and long-term reversal signal based on 6m and 36m momentum
================================================================================
üìä Loading SignalMasterTable data...
Loaded: 4,047,630 observations
üßÆ Computing 6m and 36m momentum signals...
üíæ Saving MomRev predictor...
saving MomRev
Saved 261618 rows to ../pyData/Predictors/MomRev.csv
‚úÖ MomRev.csv saved successfully
================================================================================
‚úÖ MomRev.py Complete
Momentum and long-term reversal signal generated successfully
================================================================================
============================================================
‚úÖ Completed: MomRev.py
Execution time: 3.92 seconds


üîÑ Starting: MomSeason.py
============================================================
Starting MomSeason.py...
Loading SignalMasterTable...
Loaded data: 4047630 rows
Filling missing returns with 0...
Creating lag variables for returns (23, 35, 47, 59 months)...
Calculating seasonal momentum signal...
Calculated MomSeason for 3437360 observations
saving MomSeason
Saved 3437360 rows to ../pyData/Predictors/MomSeason.csv
MomSeason.py completed successfully
============================================================
‚úÖ Completed: MomSeason.py
Execution time: 1.73 seconds


üîÑ Starting: MomSeason06YrPlus.py
============================================================
Starting MomSeason06YrPlus.py...
Loading data...
Calculated MomSeason06YrPlus for 2472493 observations
saving MomSeason06YrPlus
Saved 2472493 rows to ../pyData/Predictors/MomSeason06YrPlus.csv
MomSeason06YrPlus.py completed successfully
============================================================
‚úÖ Completed: MomSeason06YrPlus.py
Execution time: 1.72 seconds


üîÑ Starting: MomSeason11YrPlus.py
============================================================
Starting MomSeason11YrPlus.py...
Loading data...
Calculated MomSeason11YrPlus for 1707812 observations
saving MomSeason11YrPlus
Saved 1707812 rows to ../pyData/Predictors/MomSeason11YrPlus.csv
MomSeason11YrPlus.py completed successfully
============================================================
‚úÖ Completed: MomSeason11YrPlus.py
Execution time: 1.72 seconds


üîÑ Starting: MomSeason16YrPlus.py
============================================================
Starting MomSeason16YrPlus.py...
Loading data...
Calculated MomSeason16YrPlus for 1211157 observations
saving MomSeason16YrPlus
Saved 1211157 rows to ../pyData/Predictors/MomSeason16YrPlus.csv
MomSeason16YrPlus.py completed successfully
============================================================
‚úÖ Completed: MomSeason16YrPlus.py
Execution time: 1.68 seconds


üîÑ Starting: MomSeasonShort.py
============================================================
Starting MomSeasonShort.py...
Loading SignalMasterTable...
Loaded data: 4047630 rows
Filling missing returns with 0...
Creating 11-month lag for seasonal momentum...
Calculated MomSeasonShort for 3730640 observations
saving MomSeasonShort
Saved 3730640 rows to ../pyData/Predictors/MomSeasonShort.csv
MomSeasonShort.py completed successfully
============================================================
‚úÖ Completed: MomSeasonShort.py
Execution time: 1.23 seconds


üîÑ Starting: MomVol.py
============================================================
Calculating 6-month calendar-based rolling mean volume...
saving MomVol
Saved 1096816 rows to ../pyData/Predictors/MomVol.csv
============================================================
‚úÖ Completed: MomVol.py
Execution time: 3.26 seconds


üîÑ Starting: MRreversal.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/MRreversal.py:47: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[f'ret_lag{lag}_orig_missing'] = df[f'ret_lag{lag}_orig_missing'].fillna(True).infer_objects(copy=False)
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/MRreversal.py:47: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[f'ret_lag{lag}_orig_missing'] = df[f'ret_lag{lag}_orig_missing'].fillna(True).infer_objects(copy=False)
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/MRreversal.py:47: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[f'ret_lag{lag}_orig_missing'] = df[f'ret_lag{lag}_orig_missing'].fillna(True).infer_objects(copy=False)
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/MRreversal.py:47: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[f'ret_lag{lag}_orig_missing'] = df[f'ret_lag{lag}_orig_missing'].fillna(True).infer_objects(copy=False)
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/MRreversal.py:47: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[f'ret_lag{lag}_orig_missing'] = df[f'ret_lag{lag}_orig_missing'].fillna(True).infer_objects(copy=False)
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/MRreversal.py:47: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df[f'ret_lag{lag}_orig_missing'] = df[f'ret_lag{lag}_orig_missing'].fillna(True).infer_objects(copy=False)
MRreversal predictor saved successfully
============================================================
‚úÖ Completed: MRreversal.py
Execution time: 8.54 seconds


üîÑ Starting: MS.py
============================================================
================================================================================
üèóÔ∏è  MS.py
Generating Mohanram G-score predictor
================================================================================
üìä Loading Compustat and SignalMasterTable data...
Loading m_aCompustat.parquet...
Loaded m_aCompustat: 3,626,619 observations
After deduplication: 3,626,619 observations
Loading SignalMasterTable.parquet...
Loaded SignalMasterTable: 4,047,630 observations
Loading m_QCompustat.parquet...
Loaded m_QCompustat: 5,463,105 observations
üîó Merging datasets...
After merging: 3,041,670 observations
üéØ Applying sample selection criteria...
Calculating BM quintiles with enhanced fastxtile...
After BM quintile filter: 572,873 observations
After SIC2D minimum filter: 554,114 observations
üßÆ Preparing financial variables...
üìà Computing quarterly aggregations...
üéØ Constructing Mohanram G-score components...
  Computing profitability and cash flow signals...
  Computing naive extrapolation (volatility) measures...
  Computing conservatism (intensity) measures...
üìÖ Applying timing logic...
Generated MS values: 473,080 observations
MS summary stats:
  Mean: 3.8114
  Std: 1.5211
  Min: 1
  Max: 6
üíæ Saving MS predictor...
saving MS
Saved 473080 rows to ../pyData/Predictors/MS.csv
‚úÖ MS.csv saved successfully
============================================================
‚úÖ Completed: MS.py
Execution time: 3.33 seconds


üîÑ Starting: NetDebtFinance.py
============================================================
Starting NetDebtFinance calculation...
Loaded m_aCompustat data: 3626619 observations
After deduplicating by permno time_avail_m: 3626619 observations
NetDebtFinance calculated for 2798509 observations
Final output: 2798509 observations
NetDebtFinance.csv saved successfully
============================================================
‚úÖ Completed: NetDebtFinance.py
Execution time: 2.88 seconds


üîÑ Starting: NetDebtPrice.py
============================================================
NetDebtPrice: Saved 1,425,763 observations
============================================================
‚úÖ Completed: NetDebtPrice.py
Execution time: 3.91 seconds


üîÑ Starting: NetEquityFinance.py
============================================================
Starting NetEquityFinance calculation...
Loaded m_aCompustat data: 3626619 observations
After deduplicating by permno time_avail_m: 3626619 observations
NetEquityFinance calculated for 2889868 observations
Final output: 2889868 observations
NetEquityFinance.csv saved successfully
============================================================
‚úÖ Completed: NetEquityFinance.py
Execution time: 2.95 seconds


üîÑ Starting: NetPayoutYield.py
============================================================
NetPayoutYield predictor created with 1819089 observations
============================================================
‚úÖ Completed: NetPayoutYield.py
Execution time: 3.89 seconds


üîÑ Starting: NOA.py
============================================================
Starting NOA calculation...
Loaded m_aCompustat data: 3626619 observations
After deduplicating by permno time_avail_m: 3626619 observations
NOA calculated for 3214176 observations
Final output: 3214176 observations
NOA.csv saved successfully
============================================================
‚úÖ Completed: NOA.py
Execution time: 3.22 seconds


üîÑ Starting: NumEarnIncrease.py
============================================================
NumEarnIncrease: 2823464 observations saved
============================================================
‚úÖ Completed: NumEarnIncrease.py
Execution time: 5.94 seconds


üîÑ Starting: OperProf.py
============================================================
OperProf: Saved 1,407,807 observations
============================================================
‚úÖ Completed: OperProf.py
Execution time: 2.48 seconds


üîÑ Starting: OperProfRD.py
============================================================
OperProfRD predictor saved successfully
============================================================
‚úÖ Completed: OperProfRD.py
Execution time: 3.83 seconds


üîÑ Starting: OPLeverage.py
============================================================
Loading m_aCompustat data...
Loaded 3626619 observations
After removing duplicates: 3626619 observations
Calculated OPLeverage for shape: (1, 8)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ permno  ‚îÜ time_avail_m ‚îÜ gvkey   ‚îÜ xsga    ‚îÜ cogs    ‚îÜ at      ‚îÜ tempxsga ‚îÜ OPLeverage ‚îÇ
‚îÇ ---     ‚îÜ ---          ‚îÜ ---     ‚îÜ ---     ‚îÜ ---     ‚îÜ ---     ‚îÜ ---      ‚îÜ ---        ‚îÇ
‚îÇ u32     ‚îÜ u32          ‚îÜ u32     ‚îÜ u32     ‚îÜ u32     ‚îÜ u32     ‚îÜ u32      ‚îÜ u32        ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ 3610138 ‚îÜ 3610138      ‚îÜ 3610138 ‚îÜ 3019268 ‚îÜ 3610138 ‚îÜ 3610138 ‚îÜ 3610138  ‚îÜ 3610138    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò observations
saving OPLeverage
Saved 3610138 rows to ../pyData/Predictors/OPLeverage.csv
OPLeverage predictor completed successfully
============================================================
‚úÖ Completed: OPLeverage.py
Execution time: 0.99 seconds


üîÑ Starting: OrderBacklog.py
============================================================
OrderBacklog predictor saved successfully
============================================================
‚úÖ Completed: OrderBacklog.py
Execution time: 1.85 seconds


üîÑ Starting: OrderBacklogChg.py
============================================================
OrderBacklogChg predictor saved successfully
============================================================
‚úÖ Completed: OrderBacklogChg.py
Execution time: 1.83 seconds


üîÑ Starting: OScore.py
============================================================
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
OScore predictor saved successfully
============================================================
‚úÖ Completed: OScore.py
Execution time: 4.55 seconds


üîÑ Starting: PatentsRD.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/PatentsRD.py:91: FutureWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.
  df = df.groupby('gvkey').apply(lambda x: x.iloc[2:] if len(x) > 2 else x.iloc[0:0]).reset_index(drop=True)
PatentsRD predictor saved successfully
============================================================
‚úÖ Completed: PatentsRD.py
Execution time: 55.75 seconds


üîÑ Starting: PayoutYield.py
============================================================
PayoutYield predictor created with 1419574 observations
============================================================
‚úÖ Completed: PayoutYield.py
Execution time: 3.55 seconds


üîÑ Starting: PctAcc.py
============================================================
PctAcc predictor saved successfully
============================================================
‚úÖ Completed: PctAcc.py
Execution time: 4.27 seconds


üîÑ Starting: PctTotAcc.py
============================================================
PctTotAcc predictor saved successfully
============================================================
‚úÖ Completed: PctTotAcc.py
Execution time: 3.41 seconds


üîÑ Starting: Price.py
============================================================
Price: Saved 4,029,252 observations
============================================================
‚úÖ Completed: Price.py
Execution time: 3.56 seconds


üîÑ Starting: ProbInformedTrading.py
============================================================
ProbInformedTrading predictor saved with 24028 observations
============================================================
‚úÖ Completed: ProbInformedTrading.py
Execution time: 1.59 seconds


üîÑ Starting: PS.py
============================================================
Starting PS.py...
Loading m_aCompustat data...
Merging with SignalMasterTable...
Loaded and merged data: 3041670 rows
Setting up panel data structure and calculating Piotroski score...
Calculated PS for 464239 observations
saving PS
Saved 464239 rows to ../pyData/Predictors/PS.csv
PS.py completed successfully
============================================================
‚úÖ Completed: PS.py
Execution time: 6.34 seconds


üîÑ Starting: RD.py
============================================================
RD: Saved 1,419,166 observations
============================================================
‚úÖ Completed: RD.py
Execution time: 1.88 seconds


üîÑ Starting: RDAbility.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/RDAbility.py:146: DeprecationWarning: the argument `min_periods` for `Expr.rolling_mean` is deprecated. It was renamed to `min_samples` in version 1.21.0.
  "mean": lambda col: col.rolling_mean(
================================================================================
RDAbility.py
Generating R&D ability predictor using Cohen, Diether and Malloy (2013) methodology
================================================================================
Loading a_aCompustat data...
Loaded Compustat: 302,420 observations
Expanding to monthly observations...
Before expansion: 302,420 observations
After expansion: 3,629,040 observations
Applying final filters...
After gvkey-time filter: 3,626,741 observations
After permno-time filter: 3,626,619 observations
Generated RDAbility values: 3,626,619 observations
Non-null RDAbility: 181,066 observations
RDAbility summary stats:
  Mean: 0.473175
  Std: 5.421382
  Min: -170.731482
  Max: 125.476431
Saving RDAbility predictor...
saving RDAbility
Saved 181066 rows to ../pyData/Predictors/RDAbility.csv
RDAbility.csv saved successfully
============================================================
‚úÖ Completed: RDAbility.py
Execution time: 12.33 seconds


üîÑ Starting: RDcap.py
============================================================
saving RDcap
Saved 537864 rows to ../pyData/Predictors/RDcap.csv
RDcap predictor saved successfully
============================================================
‚úÖ Completed: RDcap.py
Execution time: 2.61 seconds


üîÑ Starting: RDIPO.py
============================================================
RDIPO predictor saved successfully
============================================================
‚úÖ Completed: RDIPO.py
Execution time: 3.04 seconds


üîÑ Starting: RDS.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/RDS.py:84: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  (df['recta_orig_missing'] & df['l12_recta_orig_missing'].fillna(True).infer_objects(copy=False)) &
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/RDS.py:85: FutureWarning: Downcasting object dtype arrays on .fillna, .ffill, .bfill is deprecated and will change in a future version. Call result.infer_objects(copy=False) instead. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  (df['msa_orig_missing'] & df['l12_msa_orig_missing'].fillna(True).infer_objects(copy=False))
RDS: Saved 2,817,595 observations
============================================================
‚úÖ Completed: RDS.py
Execution time: 27.57 seconds


üîÑ Starting: realestate.py
============================================================
realestate predictor saved successfully
============================================================
‚úÖ Completed: realestate.py
Execution time: 3.98 seconds


üîÑ Starting: Recomm_ShortInterest.py
============================================================
================================================================================
üèóÔ∏è  Recomm_ShortInterest.py
Generating Recommendation and Short Interest predictor
================================================================================
üìä Loading IBES Recommendations data...
Loaded IBES Recommendations: 864,089 observations
After taking mean recommendation within each stock-month: 1,302,063 observations
üìä Loading SignalMasterTable, CRSP, and Short Interest data...
Loaded SignalMasterTable: 3,041,670 observations
SignalMasterTable merged with CRSP: 3,041,670 observations
After merging with short interest: 1,577,931 observations
After merging with recommendations: 792,823 observations
üßÆ Signal construction...
üìä Computing quintiles using stata_fastxtile...
--- Signal summary ---
Signal distribution: shape: (3, 2)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Recomm_ShortInterest ‚îÜ count  ‚îÇ
‚îÇ ---                  ‚îÜ ---    ‚îÇ
‚îÇ i32                  ‚îÜ u32    ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ null                 ‚îÜ 725050 ‚îÇ
‚îÇ 1                    ‚îÜ 41268  ‚îÇ
‚îÇ 0                    ‚îÜ 26505  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
Time period:
1993-10-01 to 2024-12-01
üíæ Saving Recomm_ShortInterest predictor...
saving Recomm_ShortInterest
Saved 67773 rows to ../pyData/Predictors/Recomm_ShortInterest.csv
‚úÖ Recomm_ShortInterest.csv saved successfully
============================================================
‚úÖ Completed: Recomm_ShortInterest.py
Execution time: 3.34 seconds


üîÑ Starting: retConglomerate.py
============================================================
Starting retConglomerate predictor (rewritten from scratch)...
Loading CCMLinkingTable...
Initial crosswalk shape: (31908, 4)
tempCW shape after destring: (31908, 4)
Loading monthlyCRSP...
Initial CRSP shape: (5153763, 3)
tempCRSP shape: (5153763, 3)
Loading a_aCompustat...
Initial compustat annual shape: (302420, 4)
tempCS shape after filtering: (301596, 4)
Loading CompustatSegments...
Initial segments shape: (2766341, 5)
After stype filter: (1417450, 5)
After sales filter: (1370647, 5)
Identifying conglomerates...
After collapse: (535678, 4)
After merge with tempCS: (395688, 7)
Columns after merge: ['gvkey', 'sic2D', 'datadate', 'sales', 'fyear', 'permno', 'saleACS']
Industry count distribution:\ntempNInd
1    165265
2     88426
3     78309
4     38864
5     15375
Name: count, dtype: int64
After dropping missing Conglomerate: (232661, 11)
Conglomerate distribution:\nConglomerate
0.0    159872
1.0     72789
Name: count, dtype: int64
Calculating industry returns from stand-alones...
Stand-alone segments shape: (159872, 11)
After merge with tempCW: (191340, 14)
Columns after merge: ['gvkey', 'sic2D', 'datadate', 'sales', 'fyear', 'permno_x', 'saleACS', 'temptotalSales', 'tempCSSegmentShare', 'tempNInd', 'Conglomerate', 'permno_y', 'timeLinkStart_d', 'timeLinkEnd_d']
Valid links: 159,039 out of 191,340
After link validity filter: (159039, 14)
After duplicates drop: (158828, 3)
After merge with tempCRSP: (40264453, 5)
After year filter: (1844973, 6)
Industry returns shape: (38392, 3)
Constructing conglomerate returns signal...
Conglomerate segments shape: (72789, 11)
After dropping missing sic2DCSS: (72514, 4)
After merge with industry returns: (42079522, 6)
After year filter: (866334, 7)
Weight distribution:\ncount    864870.000000
mean          0.877279
std           0.227933
min           0.000000
25%           1.000000
50%           1.000000
75%           1.000000
max           1.000000
Name: tempweight, dtype: float64
Number of observations with weight < 1: 209516
Final result shape: (759644, 3)
Saving predictor...
saving retConglomerate
Saved 759644 rows to ../pyData/Predictors/retConglomerate.csv
retConglomerate predictor completed successfully!
============================================================
‚úÖ Completed: retConglomerate.py
Execution time: 5.60 seconds


üîÑ Starting: ReturnSkew.py
============================================================
================================================================================
üèóÔ∏è  ReturnSkew.py
Generating ReturnSkew predictor (skewness of daily returns)
================================================================================
üìä Loading daily CRSP data...
Loaded CRSP: 107,662,961 daily observations

üîß Starting signal construction...
Creating time_avail_m (year-month identifier)...
Date range: 1926-01-02 00:00:00 to 2024-12-31 00:00:00
Calculating return skewness by permno-month...
Generated 5,116,571 permno-month observations before filtering
Filtering to permno-months with >=15 observations...
After >=15 filter: 5,072,664 observations

üìà Predictor summary statistics:
shape: (1, 4)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ ReturnSkew_mean ‚îÜ ReturnSkew_std ‚îÜ ReturnSkew_min ‚îÜ ReturnSkew_max ‚îÇ
‚îÇ ---             ‚îÜ ---            ‚îÜ ---            ‚îÜ ---            ‚îÇ
‚îÇ f64             ‚îÜ f64            ‚îÜ f64            ‚îÜ f64            ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ NaN             ‚îÜ NaN            ‚îÜ -4.902903      ‚îÜ 4.902903       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

üíæ Saving predictor...
saving ReturnSkew
Saved 4952730 rows to ../pyData/Predictors/ReturnSkew.csv

================================================================================
‚úÖ ReturnSkew.py completed successfully
Generated 1 predictor:
  ‚Ä¢ ReturnSkew: Return Skewness
================================================================================
============================================================
‚úÖ Completed: ReturnSkew.py
Execution time: 5.29 seconds


üîÑ Starting: REV6.py
============================================================
Loading and processing REV6...
REV6 predictor saved successfully
============================================================
‚úÖ Completed: REV6.py
Execution time: 3.89 seconds


üîÑ Starting: RevenueSurprise.py
============================================================
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/nanops.py:1016: RuntimeWarning: invalid value encountered in subtract
  sqr = _ensure_numeric((avg - values) ** 2)
RevenueSurprise predictor created with 2107505 observations
============================================================
‚úÖ Completed: RevenueSurprise.py
Execution time: 10.99 seconds


üîÑ Starting: roaq.py
============================================================
roaq: Saved 2,490,904 observations
============================================================
‚úÖ Completed: roaq.py
Execution time: 3.50 seconds


üîÑ Starting: RoE.py
============================================================
RoE: Saved 3,530,110 observations
============================================================
‚úÖ Completed: RoE.py
Execution time: 3.37 seconds


üîÑ Starting: sfe.py
============================================================
sfe predictor saved successfully
============================================================
‚úÖ Completed: sfe.py
Execution time: 22.03 seconds


üîÑ Starting: ShareIss1Y.py
============================================================
Starting ShareIss1Y calculation...
After merge: 4047630 observations
ShareIss1Y calculated for 3517511 observations
Final output: 3517511 observations
ShareIss1Y.csv saved successfully
============================================================
‚úÖ Completed: ShareIss1Y.py
Execution time: 5.26 seconds


üîÑ Starting: ShareIss5Y.py
============================================================
Starting ShareIss5Y calculation...
After merge: 4047630 observations
ShareIss5Y calculated for 2508021 observations
Final output: 2508021 observations
ShareIss5Y.csv saved successfully
============================================================
‚úÖ Completed: ShareIss5Y.py
Execution time: 4.54 seconds


üîÑ Starting: ShareRepurchase.py
============================================================
ShareRepurchase predictor created with 3626619 observations
============================================================
‚úÖ Completed: ShareRepurchase.py
Execution time: 1.75 seconds


üîÑ Starting: ShareVol.py
============================================================
Starting ShareVol.py...
Loading SignalMasterTable...
Loaded SignalMasterTable: 4047630 rows
Merging with monthly CRSP data...
After merge: 4047630 rows
Setting up panel data structure...
Creating lag variables for volume calculation...
Calculating ShareVol signal...
Calculated ShareVol for 1906936 observations
saving ShareVol
Saved 1661295 rows to ../pyData/Predictors/ShareVol.csv
ShareVol.py completed successfully
============================================================
‚úÖ Completed: ShareVol.py
Execution time: 0.82 seconds


üîÑ Starting: ShortInterest.py
============================================================
Starting ShortInterest calculation...
After dropping missing gvkey: 3041670 observations
After merge with monthlyCRSP: 3041670 observations
After merge with monthlyShortInterest: 1577931 observations
ShortInterest calculated for 1577931 observations
Final output: 1577931 observations
ShortInterest.csv saved successfully
============================================================
‚úÖ Completed: ShortInterest.py
Execution time: 3.22 seconds


üîÑ Starting: sinAlgo.py
============================================================
Starting sinAlgo.py...
Loading Compustat segments data...
Loaded segments data: 2766341 rows
Identifying sin segments...
Loading SignalMasterTable...
Loaded SignalMasterTable: 4047630 rows
Merging with Compustat annual data...
After merge: 4047630 rows
Identifying sin stocks...
Calculating sinAlgo signal...
Calculated sinAlgo for 233996 observations
saving sinAlgo
Saved 233996 rows to ../pyData/Predictors/sinAlgo.csv
sinAlgo.py completed successfully
============================================================
‚úÖ Completed: sinAlgo.py
Execution time: 30.93 seconds


üîÑ Starting: Size.py
============================================================
/Users/chen1678/venvloc/openap/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
Size: Saved 4,029,252 observations
============================================================
‚úÖ Completed: Size.py
Execution time: 3.55 seconds


üîÑ Starting: skew1.py
============================================================
Starting skew1.py...
skew1 predictor saved successfully
============================================================
‚úÖ Completed: skew1.py
Execution time: 1.20 seconds


üîÑ Starting: SmileSlope.py
============================================================
saving SmileSlope
Saved 872108 rows to ../pyData/Predictors/SmileSlope.csv
============================================================
‚úÖ Completed: SmileSlope.py
Execution time: 2.28 seconds


üîÑ Starting: SP.py
============================================================
SP: Saved 3,030,937 observations
============================================================
‚úÖ Completed: SP.py
Execution time: 3.36 seconds


üîÑ Starting: Spinoff.py
============================================================
Spinoff predictor saved successfully
============================================================
‚úÖ Completed: Spinoff.py
Execution time: 2.53 seconds


üîÑ Starting: std_turn.py
============================================================
Starting std_turn.py...
Loading data...
saving std_turn
Saved 2200763 rows to ../pyData/Predictors/std_turn.csv
std_turn.py completed successfully
============================================================
‚úÖ Completed: std_turn.py
Execution time: 1.45 seconds


üîÑ Starting: STreversal.py
============================================================
Starting STreversal.py...
Loading SignalMasterTable...
Loaded data: 4047630 rows
Calculating STreversal...
Calculated STreversal for 4047630 observations
saving STreversal
Saved 4047630 rows to ../pyData/Predictors/STreversal.csv
STreversal.py completed successfully
============================================================
‚úÖ Completed: STreversal.py
Execution time: 0.44 seconds


üîÑ Starting: SurpriseRD.py
============================================================
SurpriseRD predictor saved successfully
============================================================
‚úÖ Completed: SurpriseRD.py
Execution time: 2.36 seconds


üîÑ Starting: tang.py
============================================================
tang: Saved 1,518,487 observations
============================================================
‚úÖ Completed: tang.py
Execution time: 2.90 seconds


üîÑ Starting: Tax.py
============================================================
Tax: Saved 3,214,396 observations
============================================================
‚úÖ Completed: Tax.py
Execution time: 2.97 seconds


üîÑ Starting: TotalAccruals.py
============================================================
TotalAccruals predictor saved successfully
============================================================
‚úÖ Completed: TotalAccruals.py
Execution time: 4.56 seconds


üîÑ Starting: TrendFactor.py
============================================================
================================================================================
üèóÔ∏è  TrendFactor.py
Generating TrendFactor predictor using daily data with moving averages
================================================================================
üìä Loading daily CRSP data...
Daily CRSP data: 107,662,961 observations
üîÑ Computing adjusted prices and time variables...
üìà Computing moving averages for 11 different lags...
  Computing 3-day moving average...
  Computing 5-day moving average...
  Computing 10-day moving average...
  Computing 20-day moving average...
  Computing 50-day moving average...
  Computing 100-day moving average...
  Computing 200-day moving average...
  Computing 400-day moving average...
  Computing 600-day moving average...
  Computing 800-day moving average...
  Computing 1000-day moving average...
üìÖ Keeping only end-of-month observations...
Monthly data after filtering: 5,116,571 observations
üìä Creating monthly data with future returns and moving averages for regressions
üéØ Computing size deciles based on NYSE stocks...
üîç Applying filters for regression sample...
After applying filters: 2,077,306 observations
After merging moving averages: 2,076,868 observations
Preparing for cross-sectional regression...
Carefully creating fRet with left join
üîß asreg regressions with asreg_collinear
Warning: could not process group 2024-12-01 00:00:00: No rows left after applying estimation-sample mask.
üìä Computing 12-month rolling averages of beta coefficients...
üéØ Computing TrendFactor as the smoothed regression model predictions
Generated TrendFactor values: 2,058,241 observations
üíæ Saving TrendFactor predictor...
saving TrendFactor
Saved 2058241 rows to ../pyData/Predictors/TrendFactor.csv
‚úÖ TrendFactor.csv saved successfully
üéâ TrendFactor computation completed!
============================================================
‚úÖ Completed: TrendFactor.py
Execution time: 119.85 seconds


üîÑ Starting: UpRecomm.py
============================================================
UpRecomm predictor created with 464223 observations
============================================================
‚úÖ Completed: UpRecomm.py
Execution time: 20.09 seconds


üîÑ Starting: VarCF.py
============================================================
Calculating rolling statistics for 29339 firms...
Rolling statistics calculation completed
VarCF predictor saved successfully
============================================================
‚úÖ Completed: VarCF.py
Execution time: 4.76 seconds


üîÑ Starting: VolMkt.py
============================================================
Starting VolMkt.py...
Loading monthly CRSP data...
Loaded data: 5153763 rows
Calculating market value and dollar volume...
Creating 12-month rolling mean of dollar volume...
Calculated VolMkt for 5153763 observations
saving VolMkt
Saved 4361398 rows to ../pyData/Predictors/VolMkt.csv
VolMkt.py completed successfully
============================================================
‚úÖ Completed: VolMkt.py
Execution time: 0.68 seconds


üîÑ Starting: VolSD.py
============================================================
================================================================================
üèóÔ∏è  VolSD.py
Creating volume variance predictor using 36-month rolling standard deviation
================================================================================
üìä Loading monthly CRSP data...
Loaded: 5,153,763 observations
üßÆ Computing 36-month rolling volume standard deviation...
üíæ Saving VolSD predictor...
saving VolSD
Saved 3922399 rows to ../pyData/Predictors/VolSD.csv
‚úÖ VolSD.csv saved successfully
================================================================================
‚úÖ VolSD.py Complete
Volume variance predictor generated successfully
================================================================================
============================================================
‚úÖ Completed: VolSD.py
Execution time: 0.60 seconds


üîÑ Starting: VolumeTrend.py
============================================================
Loading and processing VolumeTrend...
Rolling window regressions of volume on time...
Calculating 60-month rolling mean of vol...
saving VolumeTrend
Saved 3677088 rows to ../pyData/Predictors/VolumeTrend.csv
VolumeTrend predictor saved successfully
============================================================
‚úÖ Completed: VolumeTrend.py
Execution time: 6.41 seconds


üîÑ Starting: XFIN.py
============================================================
XFIN predictor saved successfully
============================================================
‚úÖ Completed: XFIN.py
Execution time: 3.88 seconds


üîÑ Starting: ZZ0_RealizedVol_IdioVol3F_ReturnSkew3F.py
============================================================
================================================================================
üèóÔ∏è  ZZ0_RealizedVol_IdioVol3F_ReturnSkew3F.py
Generating RealizedVol, IdioVol3F, and ReturnSkew3F predictors
================================================================================
üìä Loading daily CRSP and Fama-French data...
Loading dailyCRSP.parquet...
Loaded CRSP: 107,662,961 daily observations
Loading dailyFF.parquet...
Loaded FF factors: 26,023 daily observations
Merging CRSP and FF data...
Merged dataset: 107,583,998 observations
Adjusting returns by risk-free rate...

üîß Starting signal construction...
Creating time_avail_m (year-month identifier)...
Date range: 1926-07-01 00:00:00 to 2024-12-31 00:00:00
Running FF3 regressions by permno-month to extract residuals...
Adding _Nobs to track observations used in regression...
‚ö†Ô∏è  Warning: 63491 observations with missing residuals (likely singular matrices)
Completed regressions: 105,390,189 observations
Filtering out observations where FF3 regression failed (null residuals)...
After removing null residuals: 105,326,698 observations
Permno-month groups after filtering: 4,980,936
Calculating predictors using group aggregations...
Generated predictors: 4,980,936 permno-month observations

üìà Predictor summary statistics:
shape: (1, 6)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ RealizedVol_me ‚îÜ RealizedVol_st ‚îÜ IdioVol3F_mean ‚îÜ IdioVol3F_std ‚îÜ ReturnSkew3F_ ‚îÜ ReturnSkew3F_ ‚îÇ
‚îÇ an             ‚îÜ d              ‚îÜ ---            ‚îÜ ---           ‚îÜ mean          ‚îÜ std           ‚îÇ
‚îÇ ---            ‚îÜ ---            ‚îÜ f64            ‚îÜ f64           ‚îÜ ---           ‚îÜ ---           ‚îÇ
‚îÇ f64            ‚îÜ f64            ‚îÜ                ‚îÜ               ‚îÜ f64           ‚îÜ f64           ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ 0.029741       ‚îÜ 0.031077       ‚îÜ 0.025296       ‚îÜ 0.028492      ‚îÜ NaN           ‚îÜ NaN           ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

üíæ Saving predictors...
saving RealizedVol
Saved 4980936 rows to ../pyData/Predictors/RealizedVol.csv
saving IdioVol3F
Saved 4980936 rows to ../pyData/Predictors/IdioVol3F.csv
saving ReturnSkew3F
Saved 4967368 rows to ../pyData/Predictors/ReturnSkew3F.csv

================================================================================
‚úÖ ZZ0_RealizedVol_IdioVol3F_ReturnSkew3F.py completed successfully
Generated 3 predictors:
  ‚Ä¢ RealizedVol: Realized (Total) Vol (Daily)
  ‚Ä¢ IdioVol3F: Idiosyncratic Risk (3 factor)
  ‚Ä¢ ReturnSkew3F: Skewness of daily idiosyncratic returns (3F model)
================================================================================
============================================================
‚úÖ Completed: ZZ0_RealizedVol_IdioVol3F_ReturnSkew3F.py
Execution time: 89.02 seconds


üîÑ Starting: ZZ1_Activism1_Activism2.py
============================================================
Loading SignalMasterTable...
Initial data loaded: 4047630 rows
Merging with TR_13F...
After TR_13F merge: 4047630 rows
Merging with monthlyCRSP...
After monthlyCRSP merge: 4047630 rows
Handling ticker-based merge with GovIndex...
Records with ticker: 4047630
Records without ticker: 0
After GovIndex merge and append: 4047630 rows
Constructing Activism1 signal...
Calculating block holding quartiles by time_avail_m...
Activism1 signal constructed
Non-missing Activism1 values: 108768
Constructing Activism2 signal...
Activism2 signal constructed
Non-missing Activism2 values: 30170
Saving Activism1...
saving Activism1
Saved 108768 rows to ../pyData/Predictors/Activism1.csv
Saving Activism2...
saving Activism2
Saved 30170 rows to ../pyData/Predictors/Activism2.csv
Activism1 and Activism2 predictors completed!
============================================================
‚úÖ Completed: ZZ1_Activism1_Activism2.py
Execution time: 3.15 seconds


üîÑ Starting: ZZ1_AnalystValue_AOP_PredictedFE_IntrinsicValue.py
============================================================
================================================================================
üèóÔ∏è  ZZ1_AnalystValue_AOP_PredictedFE_IntrinsicValue.py
Generating analyst value predictors: AnalystValue, AOP, PredictedFE. Also the placebo IntrinsicValue.
================================================================================
üìä Preparing IBES forecast data...
Loading IBES EPS Unadj for FROE1...
FROE1 data: 183,523 observations
Loading IBES EPS Unadj for FROE2...
FROE2 data: 181,697 observations
Loading IBES EPS Unadj for LTG...
LTG data: 1,423,499 observations
üìä Loading main data sources...
SignalMasterTable: 4,047,630 observations
After merging CRSP and Compustat: 4,047,630 observations
After filtering to June observations: 336,692 observations
After merging IBES data: 336,692 observations
üßÆ Computing financial variables and screens...
üìà Computing forecast-based equity values...
üîç Applying data screens...
After applying screens: 108,632 observations
üí∞ Computing analyst and intrinsic values...
üîÆ Computing predicted forecast error...
üìÖ Expanding to monthly observations...
üíæ Saving predictors...
Generated AnalystValue: 1,299,504 observations
  Mean: 0.780050
  Std: 10.226677
saving AnalystValue
Saved 1299504 rows to ../pyData/Predictors/AnalystValue.csv
‚úÖ AnalystValue.csv saved successfully
Generated AOP: 1,299,504 observations
  Mean: 160.357614
  Std: 46464.774095
saving AOP
Saved 1299504 rows to ../pyData/Predictors/AOP.csv
‚úÖ AOP.csv saved successfully
Generated PredictedFE: 635,124 observations
  Mean: 0.052645
  Std: 0.033105
saving PredictedFE
Saved 635124 rows to ../pyData/Predictors/PredictedFE.csv
‚úÖ PredictedFE.csv saved successfully
saving IntrinsicValue
Saved 1299504 rows to ../pyData/Placebos/IntrinsicValue.csv
‚úÖ IntrinsicValue.csv saved successfully
üéâ All analyst value predictors completed!
============================================================
‚úÖ Completed: ZZ1_AnalystValue_AOP_PredictedFE_IntrinsicValue.py
Execution time: 1.84 seconds


üîÑ Starting: ZZ1_EBM_BPEBM.py
============================================================
Starting ZZ1_EBM_BPEBM.py...
Loading data...
saving EBM
Saved 2924835 rows to ../pyData/Predictors/EBM.csv
ZZ1_EBM_BPEBM.py completed successfully
saving BPEBM
Saved 2924835 rows to ../pyData/Predictors/BPEBM.csv
ZZ1_EBM_BPEBM.py completed successfully
============================================================
‚úÖ Completed: ZZ1_EBM_BPEBM.py
Execution time: 1.31 seconds


üîÑ Starting: ZZ1_FR_FRbook.py
============================================================
FR (Predictor) and FRbook (Placobo) saved successfully
============================================================
‚úÖ Completed: ZZ1_FR_FRbook.py
Execution time: 2.97 seconds


üîÑ Starting: ZZ1_grcapx_grcapx1y_grcapx3y.py
============================================================
Starting ZZ1_grcapx_grcapx1y_grcapx3y.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3626619 rows, 6 columns
Removing duplicate permno-time_avail_m observations...
Removed 0 duplicate observations
Merging with SignalMasterTable...
After merge: 3041670 rows, 7 columns
Setting up panel data (sorting by permno, time_avail_m)...
Calculating FirmAge...
Calculating tempcrsptime and applying FirmAge restriction...
Creating l12_ppent lag for conditional replacement...
Applying conditional capx replacement...
Creating lags for capx after replacement...
Calculating predictors...
Calculated grcapx for 2444976 observations
Calculated grcapx1y for 2440811 observations
Calculated grcapx3y for 2236619 observations
saving grcapx
Saved 2444976 rows to ../pyData/Predictors/grcapx.csv
saving grcapx1y
Saved 2440811 rows to ../pyData/Placebos/grcapx1y.csv
saving grcapx3y
Saved 2236619 rows to ../pyData/Predictors/grcapx3y.csv
ZZ1_grcapx_grcapx1y_grcapx3y.py completed successfully
============================================================
‚úÖ Completed: ZZ1_grcapx_grcapx1y_grcapx3y.py
Execution time: 2.86 seconds


üîÑ Starting: ZZ1_IntanBM_IntanSP_IntanCFP_IntanEP.py
============================================================
Starting ZZ1_IntanBM_IntanSP_IntanCFP_IntanEP.py
Loading data...
Data loaded. Shape: (3041670, 10)
Constructing signals...
Calculating cumulative returns...
Calculating 60-month calendar-based lag for cumulative returns...
Processing tempAccBM...
  Calculating 60-month calendar-based lag for tempAccBM...
Processing tempAccSP...
  Calculating 60-month calendar-based lag for tempAccSP...
Processing tempAccCFP...
  Calculating 60-month calendar-based lag for tempAccCFP...
Processing tempAccEP...
  Calculating 60-month calendar-based lag for tempAccEP...
Regressions completed.
Saving IntanBM...
Saved IntanBM with 1728573 observations
Saving IntanSP...
Saved IntanSP with 1876808 observations
Saving IntanCFP...
Saved IntanCFP with 1881252 observations
Saving IntanEP...
Saved IntanEP with 1881252 observations
ZZ1_IntanBM_IntanSP_IntanCFP_IntanEP.py completed successfully!
============================================================
‚úÖ Completed: ZZ1_IntanBM_IntanSP_IntanCFP_IntanEP.py
Execution time: 29.75 seconds


üîÑ Starting: ZZ1_iomom_cust__iomom_supp.py
============================================================
2025-09-15 14:42:06,483 - INFO - Starting InputOutputMomentum processing using R script...
2025-09-15 14:42:06,483 - INFO - Calling R script...
2025-09-15 14:42:22,094 - INFO - R script completed successfully
2025-09-15 14:42:22,095 - INFO - R output: [1] "Loading input data..."
[1] "Checking for BEA Input-Output tables..."
[1] "‚úì All BEA Input-Output tables found"
[1] "Calculating customer momentum..."
[1] "checking stock assignments:"
# A tibble: 12 √ó 5
   port    mean   vol nmonths tstat
   <chr>  <dbl> <dbl>   <int> <dbl>
 1 port1  0.628  6.31     240  1.54
 2 port10 1.51   5.83     240  4.02
 3 port2  1.20   6.04     240  3.06
 4 port3  0.942  6.46     240  2.26
 5 port4  1.00   6.17     240  2.52
 6 port5  1.26   5.94     240  3.30
 7 port6  1.41   6.14     240  3.57
 8 port7  1.26   5.88     240  3.33
 9 port8  1.47   5.98     240  3.82
10 port9  1.34   6.17     240  3.37
11 portLS 0.885  4.60     240  2.98
12 portNA 2.87  14.9      240  2.98
[1] "Calculating supplier momentum..."
[1] "checking stock assignments:"
# A tibble: 12 √ó 5
   port    mean   vol nmonths tstat
   <chr>  <dbl> <dbl>   <int> <dbl>
 1 port1  0.979  5.55     240  2.73
 2 port10 1.27   5.54     240  3.56
 3 port2  0.795  6.22     240  1.98
 4 port3  1.27   6.27     240  3.14
 5 port4  1.03   6.20     240  2.58
 6 port5  1.20   6.42     240  2.91
 7 port6  1.51   5.95     240  3.94
 8 port7  1.51   6.72     240  3.48
 9 port8  1.33   6.21     240  3.33
10 port9  1.43   6.09     240  3.63
11 portLS 0.294  4.28     240  1.06
12 portNA 3.54  18.6      240  2.95
[1] "Combining and saving results..."
[1] "Successfully saved output to: /Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyData/Intermediate/InputOutputMomentum_R.csv"
[1] "Total rows: 5661256"

2025-09-15 14:42:22,095 - INFO - Reading R script output...
2025-09-15 14:42:23,296 - INFO - Loaded R script output: 5,661,256 rows
2025-09-15 14:42:23,297 - INFO - Applying Stata post-processing...
2025-09-15 14:42:24,025 - INFO - After time_avail_m creation: 5,661,256 rows
2025-09-15 14:42:24,812 - INFO - After collapse: 5,660,992 rows
2025-09-15 14:42:25,672 - INFO - After pivot to wide: 2,906,460 rows
2025-09-15 14:42:25,897 - INFO - Successfully saved 2,906,460 rows to ../pyData/Intermediate/InputOutputMomentumProcessed.parquet
2025-09-15 14:42:25,897 - INFO - InputOutputMomentum processing completed successfully!
2025-09-15 14:42:25,898 - INFO - Sample data:
2025-09-15 14:42:25,900 - INFO -    gvkey time_avail_m  retmatchcustomer  portindcustomer  retmatchsupplier  portindsupplier
0   1001   1987-01-01         14.272342              3.0         13.687045              6.0
1   1001   1987-02-01         10.002191             10.0          3.580740              2.0
2   1001   1987-03-01          3.576098              4.0          3.106392              2.0
3   1001   1987-04-01         -1.612515              8.0         -4.319838              2.0
4   1001   1987-05-01          1.336602              9.0          2.021301             10.0
2025-09-15 14:42:25,900 - INFO - Summary statistics:
2025-09-15 14:42:25,917 - INFO - retmatchcustomer: mean=1.708478, std=5.969523, count=2778232
2025-09-15 14:42:25,932 - INFO - retmatchsupplier: mean=1.577096, std=5.282309, count=2882760
Starting iomom_cust and iomom_supp predictors...
Loading SignalMasterTable...
Loaded 3,041,670 observations with gvkey
Using 2,906,460 InputOutputMomentum observations
Merging with InputOutputMomentumProcessed...
After merge: 3,041,670 observations
After dropping missing iomom_cust: 1,637,617 observations
Saving iomom_cust predictor...
saving iomom_cust
Saved 1637617 rows to ../pyData/Predictors/iomom_cust.csv
After dropping missing iomom_supp: 1,639,789 observations
Saving iomom_supp predictor...
saving iomom_supp
Saved 1639789 rows to ../pyData/Predictors/iomom_supp.csv
iomom_cust and iomom_supp predictors completed successfully!
============================================================
‚úÖ Completed: ZZ1_iomom_cust__iomom_supp.py
Execution time: 20.86 seconds


üîÑ Starting: ZZ1_OptionVolume1_OptionVolume2.py
============================================================
Starting ZZ1_OptionVolume1_OptionVolume2.py...
Loading data...
Started ZZ1_OptionVolume1_OptionVolume2.py...
saving OptionVolume1
Saved 778681 rows to ../pyData/Predictors/OptionVolume1.csv
ZZ1_OptionVolume1_OptionVolume2.py completed successfully
saving OptionVolume2
Saved 766055 rows to ../pyData/Predictors/OptionVolume2.csv
ZZ1_OptionVolume1_OptionVolume2.py completed successfully
============================================================
‚úÖ Completed: ZZ1_OptionVolume1_OptionVolume2.py
Execution time: 5.01 seconds


üîÑ Starting: ZZ1_OrgCap_OrgCapNoAdj.py
============================================================
Loading data files...
After filtering: 1,583,887 observations
Applying recursive organizational capital formula...
After OrgCapNoAdj calculation: 1,343,463 non-missing values
After FF17 classification: 1,465,978 observations
Final OrgCap values: 1,243,846 non-missing
saving OrgCap
Saved 1243846 rows to ../pyData/Predictors/OrgCap.csv
saving OrgCapNoAdj
Saved 1243881 rows to ../pyData/Placebos/OrgCapNoAdj.csv
OrgCap and OrgCapNoAdj calculation completed successfully!
============================================================
‚úÖ Completed: ZZ1_OrgCap_OrgCapNoAdj.py
Execution time: 92.70 seconds


üîÑ Starting: ZZ1_ResidualMomentum6m_ResidualMomentum.py
============================================================
================================================================================
üèóÔ∏è  ZZ1_ResidualMomentum6m_ResidualMomentum.py
Generating ResidualMomentum6m and ResidualMomentum predictors
================================================================================
üìä Loading monthly CRSP and Fama-French data...
Loading monthlyCRSP.parquet...
Loaded CRSP: 5,153,763 monthly observations
Loading monthlyFF.parquet...
Loaded FF factors: 1,188 monthly observations
Merging CRSP and FF data...
Merged dataset: 5,150,010 observations

üîß Starting signal construction...
Calculating excess returns (retrf = ret - rf)...
Creating time_temp position index by permno...
Running rolling 36-observation FF3 regressions by permno using direct polars-ols helper...
Processing 38835 unique permnos...
Completed rolling regressions for 5,150,010 observations
Calculating lagged residuals and momentum signals...
Calculating 6-observation and 11-observation rolling momentum signals...

üìà Signal summary statistics:
ResidualMomentum6m - Mean: -0.0597, Std: 0.5126
ResidualMomentum - Mean: -0.0383, Std: 0.3300
Non-missing ResidualMomentum6m: 3,601,799
Non-missing ResidualMomentum: 3,458,602

üíæ Saving signals...
saving ResidualMomentum6m
Saved 3601799 rows to ../pyData/Placebos/ResidualMomentum6m.csv
saving ResidualMomentum
Saved 3458602 rows to ../pyData/Predictors/ResidualMomentum.csv

================================================================================
‚úÖ ZZ1_ResidualMomentum6m_ResidualMomentum.py completed successfully
Generated 2 signals:
  ‚Ä¢ ResidualMomentum6m: 6 month residual momentum (Placebo)
  ‚Ä¢ ResidualMomentum: Momentum based on FF3 residuals (Predictor)
================================================================================
============================================================
‚úÖ Completed: ZZ1_ResidualMomentum6m_ResidualMomentum.py
Execution time: 7.88 seconds


üîÑ Starting: ZZ1_RIO_MB_RIO_Disp_RIO_Turnover_RIO_Volatility.py
============================================================
================================================================================
üèóÔ∏è  ZZ1_RIO_MB_RIO_Disp_RIO_Turnover_RIO_Volatility.py
Generating Real Investment Opportunities (RIO) predictors
================================================================================
üìä Preparing IBES data...
IBES EPS data: 2,382,154 observations
üìä Loading main data sources...
SignalMasterTable: 4,047,630 observations
After merging all data sources: 4,047,630 observations
üîç Applying size filters...
After filtering bottom size quintile: 2,620,059 observations
üèõÔ∏è Computing Residual Institutional Ownership (RIO)...
üìä Computing characteristic variables...
üè∑Ô∏è Creating characteristic quintiles and RIO interactions...
üíæ Saving RIO predictors...
Generated RIO_MB: 354,474 observations
  Value distribution:
shape: (5, 2)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ RIO_MB ‚îÜ count ‚îÇ
‚îÇ ---    ‚îÜ ---   ‚îÇ
‚îÇ f64    ‚îÜ u32   ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ 1.0    ‚îÜ 79108 ‚îÇ
‚îÇ 2.0    ‚îÜ 82962 ‚îÇ
‚îÇ 3.0    ‚îÜ 76270 ‚îÇ
‚îÇ 4.0    ‚îÜ 65044 ‚îÇ
‚îÇ 5.0    ‚îÜ 51090 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
saving RIO_MB
Saved 354474 rows to ../pyData/Predictors/RIO_MB.csv
‚úÖ RIO_MB.csv saved successfully
Generated RIO_Disp: 497,742 observations
  Value distribution:
shape: (5, 2)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ RIO_Disp ‚îÜ count  ‚îÇ
‚îÇ ---      ‚îÜ ---    ‚îÇ
‚îÇ f64      ‚îÜ u32    ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ 1.0      ‚îÜ 42951  ‚îÇ
‚îÇ 2.0      ‚îÜ 59618  ‚îÇ
‚îÇ 3.0      ‚îÜ 106473 ‚îÇ
‚îÇ 4.0      ‚îÜ 138134 ‚îÇ
‚îÇ 5.0      ‚îÜ 150566 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
saving RIO_Disp
Saved 497742 rows to ../pyData/Predictors/RIO_Disp.csv
‚úÖ RIO_Disp.csv saved successfully
Generated RIO_Turnover: 445,571 observations
  Value distribution:
shape: (5, 2)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ RIO_Turnover ‚îÜ count  ‚îÇ
‚îÇ ---          ‚îÜ ---    ‚îÇ
‚îÇ f64          ‚îÜ u32    ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ 1.0          ‚îÜ 56529  ‚îÇ
‚îÇ 2.0          ‚îÜ 85651  ‚îÇ
‚îÇ 3.0          ‚îÜ 99589  ‚îÇ
‚îÇ 4.0          ‚îÜ 96332  ‚îÇ
‚îÇ 5.0          ‚îÜ 107470 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
saving RIO_Turnover
Saved 445571 rows to ../pyData/Predictors/RIO_Turnover.csv
‚úÖ RIO_Turnover.csv saved successfully
Generated RIO_Volatility: 470,255 observations
  Value distribution:
shape: (5, 2)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ RIO_Volatility ‚îÜ count  ‚îÇ
‚îÇ ---            ‚îÜ ---    ‚îÇ
‚îÇ f64            ‚îÜ u32    ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ 1.0            ‚îÜ 56810  ‚îÇ
‚îÇ 2.0            ‚îÜ 64167  ‚îÇ
‚îÇ 3.0            ‚îÜ 97959  ‚îÇ
‚îÇ 4.0            ‚îÜ 120450 ‚îÇ
‚îÇ 5.0            ‚îÜ 130869 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
saving RIO_Volatility
Saved 470255 rows to ../pyData/Predictors/RIO_Volatility.csv
‚úÖ RIO_Volatility.csv saved successfully
üéâ All RIO predictors completed!
============================================================
‚úÖ Completed: ZZ1_RIO_MB_RIO_Disp_RIO_Turnover_RIO_Volatility.py
Execution time: 32.71 seconds


üîÑ Starting: ZZ1_RIVolSpread.py
============================================================
Starting ZZ1_RIVolSpread.py...
Loading data...
saving RIVolSpread
Saved 759401 rows to ../pyData/Predictors/RIVolSpread.csv
ZZ1_RIVolSpread.py completed successfully
============================================================
‚úÖ Completed: ZZ1_RIVolSpread.py
Execution time: 5.14 seconds


üîÑ Starting: ZZ1_zerotrade_zerotradeAlt1_zerotradeAlt12.py
============================================================
Starting ZZ1_zerotrade_zerotradeAlt1_zerotradeAlt12.py...
Loading data...
============================================================
‚úÖ Completed: ZZ1_zerotrade_zerotradeAlt1_zerotradeAlt12.py
Execution time: 21.83 seconds


üîÑ Starting: ZZ2_AbnormalAccruals_AbnormalAccrualsPercent.py
============================================================
================================================================================
üèóÔ∏è  ZZ2_AbnormalAccruals_AbnormalAccrualsPercent.py
Generating Abnormal Accruals predictor using Xie (2001) methodology
================================================================================
üìä Loading a_aCompustat data...
Loaded a_aCompustat: 302,420 observations
After merging with SignalMasterTable: 302,420 observations
üßÆ Computing abnormal accruals following Xie (2001)...
üìä Applying winsorization at 0.1% and 99.9% levels...
üè≠ Running cross-sectional regressions by year and industry (SIC2)...
After cross-sectional regressions and filtering: 264,762 observations
üìÖ Expanding to permno-monthly observations...
üíæ Saving AbnormalAccruals predictor...
saving AbnormalAccruals
Saved 2686252 rows to ../pyData/Predictors/AbnormalAccruals.csv
‚úÖ AbnormalAccruals.csv saved successfully
üíæ Saving AbnormalAccrualsPercent predictor...
saving AbnormalAccrualsPercent
Saved 2629863 rows to ../pyData/Placebos/AbnormalAccrualsPercent.csv
‚úÖ AbnormalAccrualsPercent.csv saved successfully
Generated AbnormalAccruals values: 3,248,138 observations
Non-null AbnormalAccruals: 2,686,252 observations
AbnormalAccruals summary stats:
  Mean: -0.001572
  Std: 0.166399
  Min: -8.277905
  Max: 2.811868
============================================================
‚úÖ Completed: ZZ2_AbnormalAccruals_AbnormalAccrualsPercent.py
Execution time: 1.76 seconds


üîÑ Starting: ZZ2_AnnouncementReturn.py
============================================================
Starting AnnouncementReturn calculation...
Loading CCMLinkingTable...
Loading m_QCompustat...
Loading dailyCRSP...
Merging with crosswalk...
Observations within link validity period: 84962128 out of 131268381
Merging with dailyFF...
Creating announcement windows...
Collapsing by announcement windows...
Filling missing months...
Columns after reset_index: ['index', 'AnnouncementReturn', 'permno']
Index name after reset_index: None
Final dataset shape: (2922378, 3)
Saving to pyData/Predictors/AnnouncementReturn.csv...
AnnouncementReturn calculation completed.
============================================================
‚úÖ Completed: ZZ2_AnnouncementReturn.py
Execution time: 75.30 seconds


üîÑ Starting: ZZ2_BetaFP.py
============================================================
================================================================================
üèóÔ∏è  ZZ2_BetaFP.py
Generating Frazzini-Pedersen beta using rolling correlations
================================================================================
üìä Loading daily CRSP and Fama-French data...
Loaded CRSP: 107,662,961 daily observations
Loaded FF factors: 26,023 daily observations
Merged dataset: 107,583,998 observations

üîß Starting signal construction...
Calculating excess log returns...
Computing 252-day rolling volatilities...
Creating 3-day overlapping returns...
Calculating rolling R-squared (1260-day window, min 500 obs)...
Computing Frazzini-Pedersen beta...

üìÖ Converting to monthly frequency...
Aggregating to permno-month level...
Generated predictors: 4,156,049 permno-month observations

üìà Predictor summary statistics:
shape: (9, 2)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ statistic  ‚îÜ BetaFP     ‚îÇ
‚îÇ ---        ‚îÜ ---        ‚îÇ
‚îÇ str        ‚îÜ f64        ‚îÇ
‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°
‚îÇ count      ‚îÜ 4.156049e6 ‚îÇ
‚îÇ null_count ‚îÜ 0.0        ‚îÇ
‚îÇ mean       ‚îÜ 0.976939   ‚îÇ
‚îÇ std        ‚îÜ 0.645867   ‚îÇ
‚îÇ min        ‚îÜ 0.0        ‚îÇ
‚îÇ 25%        ‚îÜ 0.51133    ‚îÇ
‚îÇ 50%        ‚îÜ 0.8909     ‚îÇ
‚îÇ 75%        ‚îÜ 1.314895   ‚îÇ
‚îÇ max        ‚îÜ 12.562312  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

üíæ Saving predictor...
saving BetaFP
Saved 4156049 rows to ../pyData/Predictors/BetaFP.csv

================================================================================
‚úÖ ZZ2_BetaFP.py completed successfully
Generated predictor: BetaFP (Frazzini-Pedersen Beta)
================================================================================
============================================================
‚úÖ Completed: ZZ2_BetaFP.py
Execution time: 11.49 seconds


üîÑ Starting: ZZ2_betaVIX.py
============================================================
Starting ZZ2_betaVIX.py...
Loading data...
saving betaVIX
Saved 3553481 rows to ../pyData/Predictors/betaVIX.csv
ZZ2_betaVIX.py completed successfully
============================================================
‚úÖ Completed: ZZ2_betaVIX.py
Execution time: 61.26 seconds


üîÑ Starting: ZZ2_IdioVolAHT.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/ZZ2_IdioVolAHT.py:225: DeprecationWarning: the argument `min_periods` for `Expr.rolling_sum` is deprecated. It was renamed to `min_samples` in version 1.21.0.
  return expr.rolling_sum(window_size, min_periods=min_samples).over(over)
Starting ZZ2_IdioVolAHT.py...
Loading daily CRSP and Fama-French data...
Daily CRSP data: 107662961 rows
Merging with Fama-French factors...
After merge: 107583998 rows
Running 252-day rolling CAPM regressions...
Calculating idiosyncratic volatility...
Calculated IdioVolAHT for 5030419 observations
saving IdioVolAHT
Saved 4849170 rows to ../pyData/Predictors/IdioVolAHT.csv
ZZ2_IdioVolAHT.py completed successfully
============================================================
‚úÖ Completed: ZZ2_IdioVolAHT.py
Execution time: 88.62 seconds


üîÑ Starting: ZZ2_PriceDelaySlope_PriceDelayRsq_PriceDelayTstat.py
============================================================
================================================================================
üèóÔ∏è  ZZ2_PriceDelaySlope_PriceDelayRsq_PriceDelayTstat.py
Generating price delay predictors using daily data regressions
================================================================================
üìä Preparing daily Fama-French data with lags...
Daily FF data with 4 lags: 26,023 observations
üìä Loading daily CRSP data...
Daily CRSP data: 107,662,961 observations
After merging and adjusting returns: 107,583,998 observations

üìä FULL DATASET MODE: Processing all permnos
üìÖ Setting up time variables for June regressions...
üèÉ Running regressions by group...
  Filtering groups with minimum 26 observations and data quality checks...
Groups before quality filtering: 461,455
Groups after quality filtering: 448,811
  Filtered out 12,644 groups with data quality issues
üöÄ Processing all valid groups
After filtering for minimum observations and data quality: 106,071,675 observations
  Running regressions (one per group)...
  Running restricted regressions on 448,811 groups...
  Running unrestricted regressions on 448,811 groups...
üìä Extracting coefficients and R-squared values...
üìÖ Filtering for valid results and June endpoints...
Monthly data after filtering: 415,512 observations
üéØ Constructing price delay signals...
üìä Applying winsorization and time adjustment...
üìÖ Forward-filling to monthly frequency...
  Calculated values: 415,512 observations
  Creating complete time series per permno...
  Processing 37576 permnos...
    Processing batch 1/376...
    Processing batch 11/376...
    Processing batch 21/376...
    Processing batch 31/376...
    Processing batch 41/376...
    Processing batch 51/376...
    Processing batch 61/376...
    Processing batch 71/376...
    Processing batch 81/376...
    Processing batch 91/376...
    Processing batch 101/376...
    Processing batch 111/376...
    Processing batch 121/376...
    Processing batch 131/376...
    Processing batch 141/376...
    Processing batch 151/376...
    Processing batch 161/376...
    Processing batch 171/376...
    Processing batch 181/376...
    Processing batch 191/376...
    Processing batch 201/376...
    Processing batch 211/376...
    Processing batch 221/376...
    Processing batch 231/376...
    Processing batch 241/376...
    Processing batch 251/376...
    Processing batch 261/376...
    Processing batch 271/376...
    Processing batch 281/376...
    Processing batch 291/376...
    Processing batch 301/376...
    Processing batch 311/376...
    Processing batch 321/376...
    Processing batch 331/376...
    Processing batch 341/376...
    Processing batch 351/376...
    Processing batch 361/376...
    Processing batch 371/376...
  Complete grid after tsfill: 4,636,840 observations
  Forward-filling missing values within each permno...
  After forward-filling: 4,636,840 observations
üíæ Saving price delay predictors...
Generated PriceDelaySlope: 4,636,840 observations
  Mean: -0.172489
  Std: 251.187975
saving PriceDelaySlope
Saved 4636840 rows to ../pyData/Predictors/PriceDelaySlope.csv
‚úÖ PriceDelaySlope.csv saved successfully
Generated PriceDelayRsq: 4,636,840 observations
  Mean: 0.364095
  Std: 0.327532
saving PriceDelayRsq
Saved 4636840 rows to ../pyData/Predictors/PriceDelayRsq.csv
‚úÖ PriceDelayRsq.csv saved successfully
Generated PriceDelayTstat: 4,636,840 observations
  Mean: -0.119606
  Std: 421.830679
saving PriceDelayTstat
Saved 4636840 rows to ../pyData/Predictors/PriceDelayTstat.csv
‚úÖ PriceDelayTstat.csv saved successfully
üéâ All price delay predictors completed!
============================================================
‚úÖ Completed: ZZ2_PriceDelaySlope_PriceDelayRsq_PriceDelayTstat.py
Execution time: 203.70 seconds

Log completed at 2025-09-15 14:52:34