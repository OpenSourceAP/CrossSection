Create Predictors Log - Started at 2025-09-03 18:09:15
================================================================================


üîÑ Creating Signal Master Table: SignalMasterTable.py
============================================================
Starting SignalMasterTable.py...
Loading monthly CRSP data...
Loaded monthlyCRSP: 5153763 rows, 9 columns
Filtering for common stocks and major exchanges...
After filtering: 4047630 rows
Merging with m_aCompustat...
After Compustat merge: 4047630 rows
Adding auxiliary variables...
After adding auxiliary vars: 4047630 rows, 13 columns
Checking for IBES-CRSP linking table...
Adding IBES-CRSP link...
After IBES link merge: 4047630 rows, 14 columns
Checking for OptionMetrics-CRSP linking table...
Adding OptionMetrics-CRSP link...
After OptionMetrics link merge: 4047630 rows, 19 columns
Saving SignalMasterTable...
SignalMasterTable saved to: ../pyData/Intermediate/SignalMasterTable.parquet
Final shape: 4047630 rows, 19 columns
Column names: ['permno', 'ret', 'prc', 'shrcd', 'exchcd', 'sicCRSP', 'ticker', 'time_avail_m', 'mve_c', 'gvkey', 'sicCS', 'NYSE', 'bh1m', 'tickerIBES', 'secid', 'score', 'sdate_m', 'edate_m', 'volume']
============================================================
‚úÖ Completed: SignalMasterTable.py
Execution time: 5.42 seconds


üîÑ Starting: Accruals.py
============================================================
Starting Accruals.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3625491 rows, 10 columns
Deduplicating by permno time_avail_m...
After deduplication: 3625491 rows
Setting up panel data structure...
Creating lag variables...
Calculating Accruals...
Calculated Accruals for 3276202 observations
saving Accruals
Saved 3276202 rows to ../pyData/Predictors/Accruals.csv
Accruals.py completed successfully
============================================================
‚úÖ Completed: Accruals.py
Execution time: 1.74 seconds


üîÑ Starting: AccrualsBM.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/.venv/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/.venv/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
Starting AccrualsBM.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3625491 rows, 10 columns
Deduplicating by permno time_avail_m...
After deduplication: 3625491 rows
Merging with SignalMasterTable...
After merging with SignalMasterTable: 4047630 rows
Setting up panel data structure...
Calculating BM...
Creating lag variables for accruals...
Calculating tempacc...
Creating BM quintiles...
Creating accruals quintiles...
Generating AccrualsBM signal...
Calculated AccrualsBM for 220635 observations
saving AccrualsBM
Saved 220635 rows to ../pyData/Predictors/AccrualsBM.csv
AccrualsBM.py completed successfully
============================================================
‚úÖ Completed: AccrualsBM.py
Execution time: 4.66 seconds


üîÑ Starting: AdExp.py
============================================================
Starting AdExp.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3625491 rows, 3 columns
Merging with SignalMasterTable...
After merging with SignalMasterTable: 4047630 rows
Calculating AdExp...
Calculated AdExp for 1049037 observations
saving AdExp
Saved 1049037 rows to ../pyData/Predictors/AdExp.csv
AdExp.py completed successfully
============================================================
‚úÖ Completed: AdExp.py
Execution time: 1.93 seconds


üîÑ Starting: AgeIPO.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/Predictors/AgeIPO.py:85: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value 'nan' has dtype incompatible with bool, please explicitly cast to a compatible dtype first.
  df.loc[df['IPOdate'].isna(), 'tempipo'] = np.nan
Starting AgeIPO.py...
Loading SignalMasterTable data...
Loaded SignalMasterTable: 4047630 rows, 2 columns
Merging with IPODates...
After merging with IPODates: 4047630 rows
Calculating recent IPO filter...
Calculating AgeIPO...
Applying minimum IPO firms per month filter...
Calculated AgeIPO for 353486 observations
saving AgeIPO
Saved 353486 rows to ../pyData/Predictors/AgeIPO.csv
AgeIPO.py completed successfully
============================================================
‚úÖ Completed: AgeIPO.py
Execution time: 1.04 seconds


üîÑ Starting: AM.py
============================================================
AM predictor saved successfully
============================================================
‚úÖ Completed: AM.py
Execution time: 4.48 seconds


üîÑ Starting: AnalystRevision.py
============================================================
Starting AnalystRevision.py...
Loading and preparing IBES data...
Prepared IBES data: 2382154 rows, 3 columns
Loading SignalMasterTable...
Loaded SignalMasterTable: 4047630 rows, 3 columns
Merging with IBES data...
After merging with IBES data: 4047630 rows
Setting up panel data (sorting by permno, time_avail_m)...
Calculating 1-month lag and AnalystRevision...
Calculated AnalystRevision for 1923490 observations
saving AnalystRevision
Saved 1923490 rows to ../pyData/Predictors/AnalystRevision.csv
AnalystRevision.py completed successfully
============================================================
‚úÖ Completed: AnalystRevision.py
Execution time: 1.88 seconds


üîÑ Starting: AssetGrowth.py
============================================================
Starting AssetGrowth.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3625491 rows, 4 columns
Setting up panel data (sorting by permno, time_avail_m)...
Calculating 12-month lag and AssetGrowth...
Calculated AssetGrowth for 3311751 observations
saving AssetGrowth
Saved 3311751 rows to ../pyData/Predictors/AssetGrowth.csv
AssetGrowth.py completed successfully
============================================================
‚úÖ Completed: AssetGrowth.py
Execution time: 1.41 seconds


üîÑ Starting: Beta.py
============================================================
================================================================================
üèóÔ∏è  Beta.py
Generating CAPM Beta predictor using direct polars-ols rolling regression
================================================================================
üìä Loading monthly CRSP, FF, and Market data...
Loading monthlyCRSP.parquet...
Loaded CRSP: 5,153,763 monthly observations
Loading monthlyFF.parquet...
Loaded FF: 1,187 monthly observations
Loading monthlyMarket.parquet...
Loaded Market: 1,189 monthly observations
üîó Merging datasets...
After merging: 5,150,010 observations
üßÆ Computing CAPM Beta using direct polars-ols rolling 60-observation regressions...
Computing rolling regressions by permno using 60-observation windows...
Rolling window regression with minimum 20 observations per window
Processing 38,835 unique permnos...
Generated Beta values: 4,353,773 observations
Beta summary stats:
  Mean: 0.9936
  Std: 0.7517
  Min: -29.7167
  Max: 52.6339
üíæ Saving Beta predictor...
saving Beta
Saved 4353773 rows to ../pyData/Predictors/Beta.csv
‚úÖ Beta.csv saved successfully
================================================================================
‚úÖ Beta.py Complete
CAPM Beta predictor generated using rolling 60-observation regression windows
================================================================================
============================================================
‚úÖ Completed: Beta.py
Execution time: 6.39 seconds


üîÑ Starting: BetaLiquidityPS.py
============================================================
================================================================================
üèóÔ∏è  BetaLiquidityPS.py
Generating Pastor-Stambaugh liquidity beta predictor
================================================================================
üìä Loading monthly CRSP, FF, and Liquidity data...
Loading monthlyCRSP.parquet...
Loaded CRSP: 5,153,763 monthly observations
Loading monthlyFF.parquet...
Loaded FF: 1,187 monthly observations
Loading monthlyLiquidity.parquet...
Loaded Liquidity: 749 monthly observations
üîó Merging datasets...
After merging: 5,150,010 observations
üßÆ Computing Pastor-Stambaugh liquidity beta using direct polars-ols rolling 60-observation 4-factor regressions...
Computing rolling 4-factor regressions for 38,835 unique permnos...
Using 60-observation rolling windows with 36-observation minimum for each stock
Generated BetaLiquidityPS values: 3,479,410 observations
BetaLiquidityPS summary stats:
  Mean: -0.0021
  Std: 0.4792
  Min: -23.6664
  Max: 41.6906
üíæ Saving BetaLiquidityPS predictor...
saving BetaLiquidityPS
Saved 3479410 rows to ../pyData/Predictors/BetaLiquidityPS.csv
‚úÖ BetaLiquidityPS.csv saved successfully
================================================================================
‚úÖ BetaLiquidityPS.py Complete
Pastor-Stambaugh liquidity beta predictor generated using rolling 4-factor regressions
================================================================================
============================================================
‚úÖ Completed: BetaLiquidityPS.py
Execution time: 10.24 seconds


üîÑ Starting: BetaTailRisk.py
============================================================
================================================================================
üèóÔ∏è  BetaTailRisk.py
Generating Tail Risk Beta predictor
================================================================================
üìä Part 1: Creating monthly tail risk factor from daily returns...
Loading dailyCRSP.parquet...
Loaded daily CRSP: 107,662,961 daily observations
Calculating 5th percentile returns by month...
Generated monthly 5th percentiles for 1,188 months
Filtering to tail observations (bottom 5%) and calculating tail excess returns...
Filtered to 5,325,782 tail observations
Generated monthly tail risk factor for 1,188 months
Saved TailRisk.parquet
üìä Part 2: Computing tail risk betas from monthly returns...
Loading monthlyCRSP.parquet...
Loaded monthly CRSP: 5,153,763 monthly observations
Merging with tail risk factor...
After merging: 5,153,763 observations
Computing rolling 120-month tail risk betas for 38,843 unique permnos...
Rolling 120-month regression windows with minimum 72 observations per permno
Generated BetaTailRisk values: 2,332,084 observations
BetaTailRisk summary stats:
  Mean: 0.6372
  Std: 0.7609
  Min: -96.2499
  Max: 18.9120
üíæ Saving BetaTailRisk predictor...
saving BetaTailRisk
Saved 2332084 rows to ../pyData/Predictors/BetaTailRisk.csv
‚úÖ BetaTailRisk.csv saved successfully
================================================================================
‚úÖ BetaTailRisk.py Complete
Tail risk beta predictor generated using polars rolling window regression
================================================================================
============================================================
‚úÖ Completed: BetaTailRisk.py
Execution time: 7.83 seconds


üîÑ Starting: BidAskSpread.py
============================================================
Starting BidAskSpread.py...
Loading BAspreadsCorwin data...
Loaded BAspreadsCorwin: 4481622 rows, 3 columns
BidAskSpread available for 4481622 observations
saving BidAskSpread
Saved 4481622 rows to ../pyData/Predictors/BidAskSpread.csv
BidAskSpread.py completed successfully
============================================================
‚úÖ Completed: BidAskSpread.py
Execution time: 0.50 seconds


üîÑ Starting: BM.py
============================================================
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/.venv/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: divide by zero encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
/Users/chen1678/Library/CloudStorage/Dropbox/oap-ac/CrossSection/Signals/pyCode/.venv/lib/python3.13/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log
  result = getattr(ufunc, method)(*inputs, **kwargs)
Starting BM.py...
Loading m_aCompustat data...
Loading SignalMasterTable...
Loaded m_aCompustat: 3625491 rows
Loaded SignalMasterTable: 4047630 rows
Merging with SignalMasterTable...
After merge: 4047630 rows
Setting up panel data structure...
Creating 6-month lag for market equity...
Calculating BM signal...
Calculated BM for 2715230 observations
BM.py completed successfully
============================================================
‚úÖ Completed: BM.py
Execution time: 4.34 seconds


üîÑ Starting: BMdec.py
============================================================
Starting BMdec predictor...
Loading m_aCompustat data...
Loaded 3,625,491 Compustat observations
After deduplication: 3,625,491 observations
Loading monthlyCRSP data...
Loaded 5,153,763 CRSP observations
Merging Compustat and CRSP data...
After merge: 3,362,017 observations
Constructing BMdec signal...
Generated BMdec values for 2,998,697 observations
Saving predictor...
saving BMdec
Saved 2998697 rows to ../pyData/Predictors/BMdec.csv
BMdec predictor completed successfully!
============================================================
‚úÖ Completed: BMdec.py
Execution time: 2.75 seconds


üîÑ Starting: BookLeverage.py
============================================================
Starting BookLeverage.py...
Loading m_aCompustat data...
Loaded m_aCompustat: 3625491 rows, 10 columns
Deduplicating by permno time_avail_m...
After deduplication: 3625491 rows
Calculating tempPS with fallback logic...
Calculating tempSE with fallback logic...
Calculating BookLeverage...
Calculated BookLeverage for 3607287 observations
saving BookLeverage
Saved 3607287 rows to ../pyData/Predictors/BookLeverage.csv
BookLeverage.py completed successfully
============================================================
‚úÖ Completed: BookLeverage.py
Execution time: 1.58 seconds

Log completed at 2025-09-03 18:10:11